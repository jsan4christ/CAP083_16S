geom_bar(stat='identity') +
scale_fill_manual(values=customPalette) +
#scale_fill_viridis_d() +
facet_wrap(~VisitCode, scales = "free_x" ) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 0, size = 6),
panel.grid.major.x = element_blank() ,
panel.grid.major.y = element_line(size=.1, color="black"))
p
library(alluvial)
sample_data(ps2.v1.cst.glom.species.ra) <- sample_data(ps2.v1.cst.glom.species.ra)[order(sample_data(ps2.v1.cst.glom.species.ra)$SampleID, sample_data(ps2.v1.cst.glom.species.ra)$VisitCode),]
sample_data(ps2.v2.cst.glom.species.ra) <- sample_data(ps2.v2.cst.glom.species.ra)[order(sample_data(ps2.v2.cst.glom.species.ra)$SampleID, sample_data(ps2.v2.cst.glom.species.ra)$VisitCode),]
sample_data(ps2.v3.cst.glom.species.ra) <- sample_data(ps2.v3.cst.glom.species.ra)[order(sample_data(ps2.v3.cst.glom.species.ra)$SampleID, sample_data(ps2.v3.cst.glom.species.ra)$VisitCode),]
alluvialData <- data.frame(Visit1 = sample_data(ps2.v1.cst.glom.species.ra)$sim_CST,
Visit2  = sample_data(ps2.v2.cst.glom.species.ra)$sim_CST,
Visit3  = sample_data(ps2.v3.cst.glom.species.ra)$sim_CST)
#alluvialData$Visit1 <- factor(alluvialData$Visit1, levels = c(1,2,3,4,5,6,7), labels = c("I", "II", "III", "IV-A", "IV-B", "IV-C","V"))
#alluvialData$Visit2 <- factor(alluvialData$Visit2, levels = c(1,2,3,4,5,6,7), labels = c("I", "II", "III", "IV-A", "IV-B", "IV-C","V"))
#alluvialData$Visit3 <- factor(alluvialData$Visit3, levels = c(1,2,3,4,5,6,7), labels = c("I", "II", "III", "IV-A", "IV-B", "IV-C","V"))
alluvialData <- alluvialData %>% dplyr::group_by(Visit1, Visit2, Visit3) %>% dplyr::summarise(n = n())
alluvialDataT <- as.data.frame(alluvialData)
alluvial(
alluvialDataT[, 1:3 ],
freq=alluvialDataT$n,
col = ifelse( alluvialDataT$Visit1 == "I", CSTsPallete[1],
ifelse( alluvialDataT$Visit1 == "II", CSTsPallete[2],
ifelse( alluvialDataT$Visit1 == "III", CSTsPallete[3],
ifelse( alluvialDataT$Visit1 == "IV-A", CSTsPallete[4],
ifelse(alluvialDataT$Visit1 == "IV-B", CSTsPallete[5],
ifelse(alluvialDataT$Visit1 == "IV-C", CSTsPallete[6],
ifelse(alluvialDataT$Visit1 == "V", CSTsPallete[7], ""))))))),
border = c("white"),
#layer = c(1,2,3,4),
#blocks = T,
alpha = 0.8,
blocks=FALSE,
axis_labels = c("Baseline", "6 weeks", "12 weeks")
)
#ps2.v3.cst.glom.species.ra <- subset_taxa(ps2.v3.cst.glom.species.ra, !(Species %in% NA | Species == ""))
ps2.v1v2v3.glom.species.ra <- prune_taxa(taxa_sums(ps2.v1v2v3.glom.species.ra) > 0, ps2.v1v2v3.glom.species.ra)
## Collapse to most important
ps2.v1v2v3.cst.merged <- merge_less_than_top(ps2.v1v2v3.glom.species.ra)
# agglomerate taxa
glom <- tax_glom(ps2.v1v2v3.cst.merged, taxrank = 'Species')
# create dataframe from phyloseq object
dat <- data.table(psmelt(glom))
# convert Phylum to a character vector from a factor because R
dat$Species <- as.character(dat$Species)
# group dataframe by Phylum, calculate median rel. abundance
dat <- dat[, median := median(Abundance, na.rm = TRUE), by = "Phylum"]
# Change name to remainder of Phylum less than 1%
#dat[(median <= 0.0001), Species := "Others"]
#sort samples by CSTs and Abundance
dat$Abundance[is.nan(dat$Abundance)] <- 0
dat <- dat[order(sim_CST, Abundance), ]
#dat <- dat[order(CSTs), ]
dat$ParticipantID <- as.character(dat$ParticipantID)
##
#Bar plot
colourCount = length(unique(dat$Sample))
getPalette = colorRampPalette(brewer.pal(9, "Set1"))
p <- ggplot(dat, aes(x=SampleID, y=Abundance, fill=Species)) +
geom_bar(aes(), stat="identity", position="stack") +
#scale_fill_manual(values=getPalette(colourCount)) +
scale_fill_manual(values=customPalette) +
theme(legend.position="bottom",
axis.text.x = element_text(size = 6, angle = 90),
legend.text = element_text(size = 8)) +
facet_grid(. ~ sim_CST, drop=TRUE,scale="free",space="free_x") +
guides(fill=guide_legend(nrow=4))
p <- p+ theme(strip.background = element_rect(fill="white", colour = "white", size = 4),
strip.text = element_text(face="bold", size=7),
panel.spacing = unit(0, "lines") #get rid of facet margins
)
g <- ggplot_gtable(ggplot_build(p))
stripr <- which(grepl('strip-t', g$layout$name))
fills <- CSTsPalleteNamed[levels(dat$sim_CST)]
k <- 1
for (i in stripr) {
j <- which(grepl('rect', g$grobs[[i]]$grobs[[1]]$childrenOrder))
g$grobs[[i]]$grobs[[1]]$children[[j]]$gp$fill <- fills[k]
k <- k+1
}
grid.newpage()
grid.draw(g)
ps2.v1.alluv <- subset_samples(ps2.v1v2v3.glom.species.ra, VisitCode == 1000)
sample_data(ps2.v1.alluv) <- sample_data(ps2.v1.alluv)[order(sample_data(ps2.v1.alluv)$SampleID, sample_data(ps2.v1.alluv)$VisitCode),]
ps2.v2.alluv <- subset_samples(ps2.v1v2v3.glom.species.ra, VisitCode == 1020)
sample_data(ps2.v2.alluv) <- sample_data(ps2.v2.alluv)[order(sample_data(ps2.v2.alluv)$SampleID, sample_data(ps2.v2.alluv)$VisitCode),]
ps2.v3.alluv <- subset_samples(ps2.v1v2v3.glom.species.ra, VisitCode == 1030)
sample_data(ps2.v3.alluv) <- sample_data(ps2.v3.alluv)[order(sample_data(ps2.v3.alluv)$SampleID, sample_data(ps2.v3.alluv)$VisitCode),]
alluvialData1 <- data.frame(Visit1 = sample_data(ps2.v1.alluv)$sim_CST,
Visit2  = sample_data(ps2.v2.alluv)$sim_CST,
Visit3  = sample_data(ps2.v3.alluv)$sim_CST)
#alluvialData1$Visit1 <- factor(alluvialData1$Visit1, levels = c(1,2,3,4,5,6,7), labels = c("I", "II", "III", "IV-A", "IV-B", "IV-C","V"))
#alluvialData1$Visit2 <- factor(alluvialData1$Visit2, levels = c(1,2,3,4,5,6,7), labels = c("I", "II", "III", "IV-A", "IV-B", "IV-C","V"))
#alluvialData1$Visit3 <- factor(alluvialData1$Visit3, levels = c(1,2,3,4,5,6,7), labels = c("I", "II", "III", "IV-A", "IV-B", "IV-C","V"))
alluvialData1 <- alluvialData1 %>% dplyr::group_by(Visit1, Visit2, Visit3) %>% dplyr::summarise(n = n())
alluvialDataT2 <- as.data.frame(alluvialData1)
#View(alluvialDataT)
alluvial(
alluvialDataT2[, 1:3],
freq=alluvialDataT2$n,
col = ifelse( alluvialDataT2$Visit1 == "I", CSTsPallete[1],
ifelse( alluvialDataT2$Visit1 == "II", CSTsPallete[2],
ifelse( alluvialDataT2$Visit1 == "III", CSTsPallete[3],
ifelse( alluvialDataT2$Visit1 == "IV-A", CSTsPallete[4],
ifelse( alluvialDataT2$Visit1 == "IV-B", CSTsPallete[5],
ifelse( alluvialDataT2$Visit1 == "IV-C", CSTsPallete[6],
ifelse( alluvialDataT2$Visit1 == "V", CSTsPallete[7], ""))))))),
border = c("white"),
#layer = c(1,2,3,4,5,6),
#blocks = T,
alpha = 0.8,
blocks=FALSE,
axis_labels = c("Baseline", "6 weeks", "3 months")
)
library(corrplot)
profInfC <- c("TNF.b"  , "IL.12p40" , "IL.12p70" , "IL.1a" , "IL.6" , "TNF.a" , "IL.1b", "IL.18" , "MIF" , "TRAIL")
#View(data.frame(sample_data(ps2.v1v2v3.cst.glom.Species.ra)))
ps2.v1.cyto <- prune_samples(sample_data(ps2.v1v2v3.glom.species.ra)$VisitCode == 1000, ps2.v1v2v3.glom.species.ra)
ps2.v1.cyto <- prune_taxa(taxa_sums(ps2.v1.cyto) > 0, ps2.v1.cyto)
ps2.v2.cyto <- prune_samples(sample_data(ps2.v1v2v3.glom.species.ra)$VisitCode == 1020, ps2.v1v2v3.glom.species.ra)
ps2.v2.cyto <- prune_taxa(taxa_sums(ps2.v2.cyto) > 0, ps2.v2.cyto)
visit1cyto <- subset(data.frame(sample_data(ps2.v1v2v3.glom.species.ra)), VisitCode == 1000, select = c("TNF.b"  , "IL.12p40" , "IL.12p70" , "IL.1a" , "IL.6" , "TNF.a" , "IL.1b", "IL.18" , "MIF" , "TRAIL"))
visit2cyto <- subset(data.frame(sample_data(ps2.v1v2v3.glom.species.ra)), VisitCode == 1020, select = c("TNF.b"  , "IL.12p40" , "IL.12p70" , "IL.1a" , "IL.6" , "TNF.a" , "IL.1b", "IL.18" , "MIF" , "TRAIL"))
##Get patients in both common in both as some have been lost in prunning such that the two objects are not equal
#visit1cytoIds <- sapply(str_split(rownames(visit1cyto), "_", n = 2, simplify = FALSE), `[`, 1)
#visit2cytoIds <- sapply(str_split(rownames(visit2cyto), "-", n = 2, simplify = FALSE), `[`, 1)
visit1cyto$PID <- as.numeric(substr(rownames(visit1cyto), 1, nchar(rownames(visit1cyto))-1))
visit2cyto$PID <- as.numeric(substr(rownames(visit2cyto), 1, nchar(rownames(visit2cyto))-1))
idsInBoth <- intersect(visit1cyto$PID, visit2cyto$PID)
#visit1cyto <- apply(visit1cyto[idsInBoth, ], 2, as.numeric)
#visit2cyto <- apply(visit2cyto[idsInBoth, ], 2, as.numeric)
visit1cyto <- visit1cyto[visit1cyto$PID %in% idsInBoth, ]
visit2cyto <- visit2cyto[visit2cyto$PID %in% idsInBoth, ]
## order by rownames of v2c
visit1cyto <- visit1cyto[with(visit2cyto, order(rownames(visit1cyto))), ]
#visit12FC <- (visit2cyto - visit1cyto)  #/visit1cyto - since the values are small, no need for fold change. Change is sufficient.
## if done right, last column pid must be 0 all through, and should be dropped.
visit12FC <- (visit2cyto - visit1cyto[with(visit2cyto, order(rownames(visit1cyto))), ])
visit12FC$PID <- NULL ##drop PID column
##V1 samples
V1_otu_tab <- data.frame(otu_table(ps2.v1.cyto))
V1_otu_tab1 <- as.data.frame(t(V1_otu_tab))
V1_otu_tab1$OTU <- rownames(V1_otu_tab1)
V1_tax_tab <- data.frame(tax_table(ps2.v1.cyto))
V1_tax_tab$OTU <- rownames(V1_tax_tab)
otuWSpeciesV1 <- merge(V1_otu_tab1, V1_tax_tab[, c("OTU", "Species")], by = "OTU")
otuWSpeciesV1 <- otuWSpeciesV1[, -1]
otuWSpeciesV1 <- otuWSpeciesV1[!duplicated(otuWSpeciesV1$Species),]
rownames(otuWSpeciesV1) <- otuWSpeciesV1$Species
t.otuWSpeciesV1 <- data.frame(t(otuWSpeciesV1[, -ncol(otuWSpeciesV1)]))
##V2 samples
V2_otu_tab <- data.frame(otu_table(ps2.v2.cyto))
V2_otu_tab1 <- as.data.frame(t(V2_otu_tab))
V2_otu_tab1$OTU <- rownames(V2_otu_tab1)
V2_tax_tab <- data.frame(tax_table(ps2.v2.cyto))
V2_tax_tab$OTU <- rownames(V2_tax_tab)
otuWSpeciesV2 <- merge(V2_otu_tab1, V1_tax_tab[, c("OTU", "Species")], by = "OTU")
otuWSpeciesV2 <- otuWSpeciesV2[, -1]
otuWSpeciesV2 <- otuWSpeciesV2[!duplicated(otuWSpeciesV2$Species),]
rownames(otuWSpeciesV2) <- otuWSpeciesV2$Species
t.otuWSpeciesV2 <- data.frame(t(otuWSpeciesV2[, -ncol(otuWSpeciesV2)]))
## resolve ids
t.otuWSpeciesV1$PID <- as.numeric(substr(rownames(t.otuWSpeciesV1), 1, nchar(rownames(t.otuWSpeciesV1))-1))
t.otuWSpeciesV2$PID <- as.numeric(substr(rownames(t.otuWSpeciesV2), 1, nchar(rownames(t.otuWSpeciesV2))-1))
## Taxa in both
taxaInBoth <- intersect(colnames(t.otuWSpeciesV1), colnames(t.otuWSpeciesV2))
t.otuWSpeciesV1 <- t.otuWSpeciesV1[t.otuWSpeciesV1$PID %in% idsInBoth, taxaInBoth]
t.otuWSpeciesV2 <- t.otuWSpeciesV2[t.otuWSpeciesV2$PID %in% idsInBoth, taxaInBoth]
##Fold Change
otuWSpeciesFC <- (t.otuWSpeciesV2 - t.otuWSpeciesV1[with(t.otuWSpeciesV2, order(rownames(t.otuWSpeciesV1))), ])
otuWSpeciesFC$PID <- NULL ##drop PID column
##Plot  proinflamatory cytokines with bacteria
# Reformat species column names so they are easier to follow
#SpeciesColNames <- colnames(otuWSpeciesFC)
#SpeciesColNamesSplit <- t(data.frame(stri_split_fixed(str = SpeciesColNames, pattern = ".", n = 2)))
#SpeciesColNamesFmt <- paste0(substr(SpeciesColNamesSplit[, 1], 1,1),". ", SpeciesColNamesSplit[, 2])
#colnames(otuWSpeciesFC) <-  SpeciesColNamesFmt
#otuWSpeciesFC <- otuWSpeciesFC[, colSums(otuWSpeciesFC) > 0]
cyto.spec <- cbind(otuWSpeciesFC, visit12FC)
cyto.spec.pca <- PCA(scale(as.matrix(cyto.spec), center = TRUE, scale = TRUE), scale.unit = FALSE, graph = FALSE)
corrplot::corrplot(cor(otuWSpeciesFC , visit12FC), type="full",
p.mat = cyto.spec.pca$P, sig.level = 0.001, insig = "blank")
par(cex = cex.before)
#colourCount = length(dim(cyto.spec)[2])
#getPalette = colorRampPalette(brewer.pal(9, "Set1"))
v2sd <- data.frame(sample_data(ps2.v2.cyto))
ps2.v2.cyto.ha <- subset_samples(ps2.v2.cyto, get_variable(ps2.v2.cyto, "ParticipantID") %in% idsInBoth)
fviz_pca_biplot(cyto.spec.pca,
#individuals
geom.ind = "point", # show points only (but not "text"),
habillage = (data.frame(sample_data(ps2.v2.cyto.ha)))$sim_CST,
col.var = "black",
#variables
alpha.var =  "cos2",
#addEllipses = TRUE, # Concentration ellipses
#ellipse.level=0.95,
palette = CSTsPallete,
legend.title = "sim_CST",
title = "PCA plot Showing the Relationship Between Bacteria and Proinflammatory Cytokines",
repel = TRUE)+
scale_color_brewer(palette="Dark2")+
theme_minimal(base_size = 14) +
theme(text = element_text(face = "bold"))
## Visit 2 (treatment)
ps2.v2.cst.glom.species.ra <- subset_samples(ps2.v1v2v3.glom.species.ra, get_variable(ps2.v1v2v3.glom.species.ra, "VisitCode") == 1020)
ps2.v2.cst.glom.species.ra <- prune_taxa(taxa_sums(ps2.v2.cst.glom.species.ra) >0, ps2.v2.cst.glom.species.ra)
ps2.v2.cst.glom.species.ra
#keyTaxa <- c("Atopobium vaginae", "Gardnerella vaginalis", "Lactobacillus crispatus", "Lactobacillus iners", "Prevotella bivia", "Prevotella genogroup_2", "Shuttleworthia BVAB1", "Sneathia sanguinegens")
keyCytokines <- c("G.CSF", "IL.1a", "IL.1b", "M.CSF")
ps2.v2.cyto <- subset_taxa(ps2.v2.cst.glom.species.ra, Species %in% keyTaxa)
taxa_names(ps2.v2.cyto) <- tax_table(ps2.v2.cyto)[, "Species"]
otu.ps2.v2.cyto <- data.frame(otu_table(ps2.v2.cyto))
df.ps2.v2.cyto <- data.frame(sample_data(ps2.v2.cyto)[, c(keyCytokines)])
dt.ps2.v2.cyto.otu <- cbind(otu.ps2.v2.cyto, df.ps2.v2.cyto)
dt.ps2.v2.pca <- PCA(scale(as.matrix(dt.ps2.v2.cyto.otu), center = TRUE, scale = TRUE), scale.unit = FALSE, graph = FALSE)
fviz_pca_biplot(dt.ps2.v2.pca,
#individuals
geom.ind = "point", # show points only (but not "text"),
habillage = (data.frame(sample_data(ps2.v2.cyto)))$sim_CST,
col.var = "black",
#variables
alpha.var =  "cos2",
#addEllipses = TRUE, # Concentration ellipses
#ellipse.level=0.95,
palette = CSTsPallete,
legend.title = "sim_CST",
title = "PCA plot Showing the Relationship Between Bacteria and Proinflammatory Cytokines",
repel = TRUE)+
scale_color_brewer(palette="Dark2")+
theme_minimal(base_size = 14) +
theme(text = element_text(face = "bold"))
### Correlation analyses:
#cor.test(dt.ps2.v2.cyto.otu$Prevotella.genogroup_2, dt.ps2.v2.cyto.otu$IL.1a, method=c("pearson", "kendall", "spearman"))
library("Hmisc")
flattenCorrMatrix <- function(cormat, pmat) {
ut <- upper.tri(cormat)
data.frame(
row = rownames(cormat)[row(cormat)[ut]],
column = rownames(cormat)[col(cormat)[ut]],
cor  =(cormat)[ut],
p = pmat[ut]
)
}
res2<-rcorr(as.matrix(dt.ps2.v2.cyto.otu))
flattenCorrMatrix(res2$r, res2$P)
## Prevotella.bivia         IL.1b   0.43260538  0.0008689908
## Prevotella.genogroup_2   G.CSF   0.3817038   0.003698811
## Prevotella.genogroup_2   IL.1b   0.3541988   0.00740119
## Prevotella.genogroup_2   M.CSF   0.2921931   0.02887506
## Sneathia.sanguinegens    G.CSF   0.3756460   0.004331281
## Positive correlation > 0.3, P < 0.02 for all
## Crispatus/Iners negatively correlated to G. vaginals and A. vaginae
sig.cyto.cleared <- c("TNF.a", "IL.1b", "LIF", "GM.CSF", "IL.8") ## CLEARANCE
sig.cyto.persisted <- c("LIF", "IL.7", "MCP.1", "IP.10", "MIF", "IL.18", "IL.1a") ## PERSISTENCE
sig.cyto.recurred <- c("M.CSF", "IFN.g", "IL.2Ra", "TNF.b", "MIF", "IL.18", "MCP.3") ## RECURRENT
## cleared in visit 2 cytokines and taxa
##sample_data(ps2.v1v2v3.f)$bv.cleared <- ifelse(((sample_data(ps2.v1v2v3.f)$VisitCode == 1000) &
##                                                  (sample_data(ps2.v1v2v3.f)$bvscat %in% c("Intermediate", "BV"))))
# sample_data(ps2.v1.cst.glom.Species.ra)$bv.persisted <- 0
# sample_data(ps2.v2.cst.glom.Species.ra)$bv.persisted <- 0
# sample_data(ps2.v3.cst.glom.Species.ra)$bv.persisted <- 0
#
# sample_data(ps2.v1.cst.glom.Species.ra)$bv.recurred <- 0
# sample_data(ps2.v2.cst.glom.Species.ra)$bv.recurred <- 0
# sample_data(ps2.v3.cst.glom.Species.ra)$bv.recurred <- 0
##Get the ids
pids <- sample_data(ps2.v1.cst.glom.species.ra)$ParticipantID
##Remove extra ids in 2 and 3
ps2.v2.cst.glom.species.ra <- subset_samples(ps2.v2.cst.glom.species.ra, sample_data(ps2.v2.cst.glom.species.ra)$ParticipantID %in% pids)
ps2.v2.cst.glom.species.ra <- prune_taxa(taxa_sums(ps2.v2.cst.glom.species.ra) > 0, ps2.v2.cst.glom.species.ra)
ps2.v3.cst.glom.species.ra <- subset_samples(ps2.v3.cst.glom.species.ra, sample_data(ps2.v3.cst.glom.species.ra)$ParticipantID %in% pids)
ps2.v3.cst.glom.species.ra <- prune_taxa(taxa_sums(ps2.v3.cst.glom.species.ra) > 0, ps2.v3.cst.glom.species.ra)
sd_wide <- data.frame(cbind(sample_data(ps2.v1.cst.glom.species.ra), sample_data(ps2.v2.cst.glom.species.ra), sample_data(ps2.v3.cst.glom.species.ra)))
#sd_wide$bv.cleared.1[ sd_wide$bvscat.1 == "Negative"] <- 1
#table(sd_wide$bv.cleared.1)
#sd_wide$bv.cleared.2[ (sd_wide$bvscat.1 %in% c("Intermediate", "BV") & sd_wide$bvscat.2 == "Negative")] <- 1
sd_wide$bv.cleared.2[ (sd_wide$bvscat.2 == "Negative")] <- 1
table(sd_wide$bv.cleared.2)
sd_wide$bv.persisted.2[ (sd_wide$bvscat.1 %in% c("Intermediate", "BV") & sd_wide$bvscat.2 %in% c("Intermediate", "BV"))] <- 1
table(sd_wide$bv.persisted.2)
sd_wide$bv.recurred.2[ (sd_wide$bvscat.1  == "Negative" & sd_wide$bvscat.2 %in% c("Intermediate", "BV"))] <- 1
table(sd_wide$bv.recurred.2)
sdv1 <- sd_wide[,c(1:86)]
sdv2 <- sd_wide[,c(87:172)]
names(sdv2) <- names(sdv1)
sdv3 <- sd_wide[,c(173:258)]
names(sdv3) <- names(sdv1)
##83 to 164 - v2, 165 to 246 - v3 //start end in wide dataset
sdv1v2v3 <- rbind(sdv1, sdv2, sdv3)
#View(sdv1v2v3)
bv.cleared.ids <- (sdv1v2v3[sdv1v2v3$bv.cleared == 1, ])$SampleID
#ps2.v1v2v3.f.glomSpecies <- tax_glom(ps2.v1v2v3.cst.glom.species.ra, taxrank = "Species")
ps2.cleared.cyto <- subset_samples(ps2.v1v2v3.glom.species.ra, sample_data(ps2.v1v2v3.glom.species.ra)$SampleID %in% bv.cleared.ids)
ps2.cleared.cyto <- subset_taxa(ps2.cleared.cyto, Species %in% keyTaxa)
ps2.cleared.cyto <- prune_taxa(taxa_sums(ps2.cleared.cyto) >0, ps2.cleared.cyto)
taxa_names(ps2.cleared.cyto) <- tax_table(ps2.cleared.cyto)[, "Species"]
otu.ps2.cleared.cyto <- data.frame(otu_table(ps2.cleared.cyto))
# Reformat species column names so they are easier to follow
#SpeciesColNames <- colnames(otu.ps2.cleared.cyto)
#SpeciesColNamesSplit <- t(data.frame(stri_split_fixed(str = SpeciesColNames, pattern = ".", n = 2)))
#SpeciesColNamesFmt <- paste0(substr(SpeciesColNamesSplit[, 1], 1,1),".", SpeciesColNamesSplit[, 2])
#colnames(otu.ps2.cleared.cyto) <-  SpeciesColNamesFmt
df.ps2.cleared.cyto <- data.frame(sample_data(ps2.cleared.cyto)[, c(sig.cyto.cleared)])
dt.ps2.cleared.cyto.otu <- cbind(otu.ps2.cleared.cyto, df.ps2.cleared.cyto)
dt.ps2.cleared.pca <- PCA(scale(as.matrix(dt.ps2.cleared.cyto.otu), center = TRUE, scale = TRUE), scale.unit = FALSE, graph = FALSE)
fviz_pca_biplot(dt.ps2.cleared.pca,
#individuals
geom.ind = "point", # show points only (but not "text"),
habillage = (data.frame(sample_data(ps2.cleared.cyto)))$sim_CST,
col.var = "black",
arrowsize=1,
#variables
alpha.var =  "cos2",
#addEllipses = TRUE, # Concentration ellipses
#ellipse.level=0.95,
palette = CSTsPallete,
legend.title = "sim_CST",
title = "PCA plot Showing the Relationship Between Bacteria and Cytokines Significant in the Cleared Category",
repel = TRUE) +
scale_color_brewer(palette="Dark2")+
theme_minimal(base_size = 14) +
theme(text = element_text(face = "bold"))
res3<-rcorr(as.matrix(dt.ps2.cleared.cyto.otu))
flattenCorrMatrix(res3$r, res3$P)
## L.iners    IL.6  0.012927043   0.951097607
##
bv.persisted.ids <- (sdv1v2v3[sdv1v2v3$bv.persisted == 1, ])$SampleID
#ps2.v1v2v3.f.glomSpecies.ra <- tax_glom(ps2.v1v2v3.cst.glom.species.ra, taxrank = "Species")
ps2.persisted.cyto <- subset_samples(ps2.v1v2v3.glom.species.ra, sample_data(ps2.v1v2v3.glom.species.ra)$SampleID %in% bv.persisted.ids)
ps2.persisted.cyto <- subset_taxa(ps2.persisted.cyto, Species %in% keyTaxa)
ps2.persisted.cyto <- prune_taxa(taxa_sums(ps2.persisted.cyto) > 0, ps2.persisted.cyto)
taxa_names(ps2.persisted.cyto) <- tax_table(ps2.persisted.cyto)[, "Species"]
otu.ps2.persisted.cyto <- data.frame(otu_table(ps2.persisted.cyto))
# Reformat species column names so they are easier to follow
#SpeciesColNames <- colnames(otu.ps2.persisted.cyto)
#SpeciesColNamesSplit <- t(data.frame(stri_split_fixed(str = SpeciesColNames, pattern = ".", n = 2)))
#SpeciesColNamesFmt <- paste0(substr(SpeciesColNamesSplit[, 1], 1,1),".", SpeciesColNamesSplit[, 2])
#colnames(otu.ps2.persisted.cyto) <-  SpeciesColNamesFmt
df.ps2.persisted.cyto <- data.frame(sample_data(ps2.persisted.cyto)[, c(sig.cyto.persisted)])
dt.ps2.persisted.cyto.otu <- cbind(otu.ps2.persisted.cyto, df.ps2.persisted.cyto)
dt.ps2.persisted.pca <- PCA(scale(as.matrix(dt.ps2.persisted.cyto.otu), center = TRUE, scale = TRUE), scale.unit = FALSE, graph = FALSE)
fviz_pca_biplot(dt.ps2.persisted.pca,
#individuals
geom.ind = "point", # show points only (but not "text"),
habillage = (data.frame(sample_data(ps2.persisted.cyto)))$sim_CST,
col.var = "black",
arrowsize=1,
#variables
alpha.var =  "cos2",
#addEllipses = TRUE, # Concentration ellipses
#ellipse.level=0.95,
palette = CSTsPallete,
legend.title = "sim_CST",
title = "PCA plot Showing the Relationship Between Bacteria and Cytokines in the Persisted Category",
repel = TRUE)+
scale_color_brewer(palette="Dark2")+
theme_minimal(base_size = 14) +
theme(text = element_text(face = "bold"))
res4<-rcorr(as.matrix(dt.ps2.persisted.cyto.otu))
flattenCorrMatrix(res4$r, res4$P)
##  P.genogroup_2  MIF     0.383470596   0.03321255
##  P.genogroup_2  IL.8    0.41718807    0.01954574
##  S.BVAB1        CTACK  -0.36535907    0.04326754
##  L.iners        MCP.1   0.30569565    0.0944447225
## G.vaginalis    IP.10   -0.345266977   0.05712728
bv.recurred.ids <- (sdv1v2v3[sdv1v2v3$bv.recurred == 1, ])$SampleID
#ps2.v1v2v3.f.glomSpecies.ra <- tax_glom(ps2.v1v2v3.cst.glom.species.ra, taxrank = "Species")
ps2.recurred.cyto <- subset_samples(ps2.v1v2v3.glom.species.ra, sample_data(ps2.v1v2v3.glom.species.ra)$SampleID %in% bv.recurred.ids)
ps2.recurred.cyto <- subset_taxa(ps2.recurred.cyto, Species %in% keyTaxa)
ps2.recurred.cyto <- prune_taxa(taxa_sums(ps2.recurred.cyto) >0, ps2.recurred.cyto)
taxa_names(ps2.recurred.cyto) <- tax_table(ps2.recurred.cyto)[, "Species"]
otu.ps2.recurred.cyto <- data.frame(otu_table(ps2.recurred.cyto))
# Reformat species column names so they are easier to follow
#SpeciesColNames <- colnames(otu.ps2.recurred.cyto)
#SpeciesColNamesSplit <- t(data.frame(stri_split_fixed(str = SpeciesColNames, pattern = ".", n = 2)))
#SpeciesColNamesFmt <- paste0(substr(SpeciesColNamesSplit[, 1], 1,1),".", SpeciesColNamesSplit[, 2])
#colnames(otu.ps2.recurred.cyto) <-  SpeciesColNamesFmt
df.ps2.recurred.cyto <- data.frame(sample_data(ps2.recurred.cyto)[, c(sig.cyto.recurred)])
dt.ps2.recurred.cyto.otu <- cbind(otu.ps2.recurred.cyto, df.ps2.recurred.cyto)
dt.ps2.recurred.pca <- PCA(scale(as.matrix(dt.ps2.recurred.cyto.otu), center = TRUE, scale = TRUE), scale.unit = FALSE, graph = FALSE)
fviz_pca_biplot(dt.ps2.recurred.pca,
#individuals
geom.ind = "point", # show points only (but not "text"),
habillage = (data.frame(sample_data(ps2.recurred.cyto)))$sim_CST,
col.var = "black",
arrowsize=1,
#variables
alpha.var =  "cos2",
#addEllipses = TRUE, # Concentration ellipses
#ellipse.level=0.95,
palette = CSTsPallete,
legend.title = "sim_CST",
title = "PCA plot Showing the Relationship Between Bacteria and Cytokines in the recurred Category",
label = "var",
repel = TRUE)+
scale_color_brewer(palette="Dark2")+
theme_minimal(base_size = 14) +
theme(text = element_text(face = "bold"))
res5<-rcorr(as.matrix(dt.ps2.recurred.cyto.otu))
flattenCorrMatrix(res5$r, res5$P)
## S.BVAB1  MCP.3   0.52634485  0.07875578
## L.iners  IL.18   -0.50821237 0.091599267
## L.crispatus  IL.18 -0.6518717  0.021621716
## L.crispatus  TNF.b -0.7573765  0.004332404
## L.crispatus  M.CSF -0.5127039  0.088294842
## G.vaginalis  TNF.b 0.55597428  0.060511462
## G.vaginalis  IL.18 0.54543067  0.066626194
View(sample_data(sample_data(ps2.v1.alluv)))
View(data.frame(sample_data(sample_data(ps2.v1.alluv)))
)
alluvialData1 <- inner_join(ps2.v1.alluv_sd[, c("ParticipantID", "sim_CST")], ps2.v2.alluv_sd[, c("ParticipantID", "sim_CST")], by = "ParticipantID")
ps2.v1.alluv <- subset_samples(ps2.v1v2v3.glom.species.ra, VisitCode == 1000)
ps2.v1.alluv_sd <- sample_data(ps2.v1.alluv)[order(sample_data(ps2.v1.alluv)$SampleID, sample_data(ps2.v1.alluv)$VisitCode),]
ps2.v2.alluv <- subset_samples(ps2.v1v2v3.glom.species.ra, VisitCode == 1020)
ps2.v3.alluv <- subset_samples(ps2.v1v2v3.glom.species.ra, VisitCode == 1030)
ps2.v3.alluv_sd <- sample_data(ps2.v3.alluv)[order(sample_data(ps2.v3.alluv)$SampleID, sample_data(ps2.v3.alluv)$VisitCode),]
alluvialData1 <- inner_join(ps2.v1.alluv_sd[, c("ParticipantID", "sim_CST")], ps2.v2.alluv_sd[, c("ParticipantID", "sim_CST")], by = "ParticipantID")
ps2.v1.alluv <- subset_samples(ps2.v1v2v3.glom.species.ra, VisitCode == 1000)
ps2.v1.alluv_sd <- sample_data(ps2.v1.alluv)[order(sample_data(ps2.v1.alluv)$SampleID, sample_data(ps2.v1.alluv)$VisitCode),]
ps2.v2.alluv <- subset_samples(ps2.v1v2v3.glom.species.ra, VisitCode == 1020)
ps2.v2.alluv_sd <- sample_data(ps2.v2.alluv)[order(sample_data(ps2.v2.alluv)$SampleID, sample_data(ps2.v2.alluv)$VisitCode),]
ps2.v3.alluv <- subset_samples(ps2.v1v2v3.glom.species.ra, VisitCode == 1030)
ps2.v3.alluv_sd <- sample_data(ps2.v3.alluv)[order(sample_data(ps2.v3.alluv)$SampleID, sample_data(ps2.v3.alluv)$VisitCode),]
alluvialData1 <- inner_join(ps2.v1.alluv_sd[, c("ParticipantID", "sim_CST")], ps2.v2.alluv_sd[, c("ParticipantID", "sim_CST")], by = "ParticipantID")
ps2.v1.alluv <- subset_samples(ps2.v1v2v3.glom.species.ra, VisitCode == 1000)
ps2.v1.alluv_sd <- data.frame(sample_data(ps2.v1.alluv)[order(sample_data(ps2.v1.alluv)$SampleID, sample_data(ps2.v1.alluv)$VisitCode),])
ps2.v2.alluv <- subset_samples(ps2.v1v2v3.glom.species.ra, VisitCode == 1020)
ps2.v2.alluv_sd <- data.frame(sample_data(ps2.v2.alluv)[order(sample_data(ps2.v2.alluv)$SampleID, sample_data(ps2.v2.alluv)$VisitCode),])
ps2.v3.alluv <- subset_samples(ps2.v1v2v3.glom.species.ra, VisitCode == 1030)
ps2.v3.alluv_sd <-  data.frame(sample_data(ps2.v3.alluv)[order(sample_data(ps2.v3.alluv)$SampleID, sample_data(ps2.v3.alluv)$VisitCode),])
alluvialData1 <- inner_join(ps2.v1.alluv_sd[, c("ParticipantID", "sim_CST")], ps2.v2.alluv_sd[, c("ParticipantID", "sim_CST")], by = "ParticipantID")
View(alluvialData1 )
alluvialData1 <- inner_join(alluvialData1, ps2.v3.alluv_sd[, c("ParticipantID", "sim_CST")], by = "ParticipantID")
alluvialData1 <- alluvialData1[, (2:4)]
colnames(alluvialData1) <- c("Visit1", "Visit2", "Visit3")
alluvialData1 <- alluvialData1 %>% dplyr::group_by(Visit1, Visit2, Visit3) %>% dplyr::summarise(n = n())
class(alluvialData1)
#alluvialDataT2 <- as.data.frame(alluvialData1)
#View(alluvialDataT)
alluvial(
alluvialDataT1[, 1:3],
freq=alluvialDataT1$n,
col = ifelse( alluvialDataT1$Visit1 == "I", CSTsPallete[1],
ifelse( alluvialDataT1$Visit1 == "II", CSTsPallete[2],
ifelse( alluvialDataT1$Visit1 == "III", CSTsPallete[3],
ifelse( alluvialDataT1$Visit1 == "IV-A", CSTsPallete[4],
ifelse( alluvialDataT1$Visit1 == "IV-B", CSTsPallete[5],
ifelse( alluvialDataT1$Visit1 == "IV-C", CSTsPallete[6],
ifelse( alluvialDataT1$Visit1 == "V", CSTsPallete[7], ""))))))),
border = c("white"),
#layer = c(1,2,3,4,5,6),
#blocks = T,
alpha = 0.8,
blocks=FALSE,
axis_labels = c("Baseline", "6 weeks", "3 months")
)
#alluvialDataT2 <- as.data.frame(alluvialData1)
#View(alluvialDataT)
alluvial(
alluvialData1[, 1:3],
freq=alluvialData1$n,
col = ifelse( alluvialData1$Visit1 == "I", CSTsPallete[1],
ifelse( alluvialData1$Visit1 == "II", CSTsPallete[2],
ifelse( alluvialData1$Visit1 == "III", CSTsPallete[3],
ifelse( alluvialData1$Visit1 == "IV-A", CSTsPallete[4],
ifelse( alluvialData1$Visit1 == "IV-B", CSTsPallete[5],
ifelse( alluvialData1$Visit1 == "IV-C", CSTsPallete[6],
ifelse( alluvialData1$Visit1 == "V", CSTsPallete[7], ""))))))),
border = c("white"),
#layer = c(1,2,3,4,5,6),
#blocks = T,
alpha = 0.8,
blocks=FALSE,
axis_labels = c("Baseline", "6 weeks", "3 months")
)
tab_v1_sim_CST <- table(sample_data(ps2.v1v2v3.glom.species.ra)$sim_CST)
tab_v1_sim_CST
tab_v1_sim_CST <- table(ps2.v1.alluv_sd$sim_CST)
tab_v1_sim_CST
tab_v2_sim_CST <- table(ps2.v2.alluv_sd$sim_CST)
tab_v2_sim_CST
tab_v3_sim_CST
tab_v3_sim_CST <- table(ps2.v3.alluv_sd$sim_CST)
tab_v3_sim_CST
prop_df = data.frame(I=c(1,2,3), III=c(15,22,26), IV-A=c(17,11,7), IV-B=c(23,20,20), IV-C=c(0,1,0))
prop_df <-  data.frame(I=c(1,2,3), III=c(15,22,26), IV-A=c(17,11,7), IV-B=c(23,20,20), IV-C=c(0,1,0))
prop_df <-  data.frame(I=c(1,2,3), III=c(15,22,26), 'IV-A'=c(17,11,7), 'IV-B'=c(23,20,20), 'IV-C'=c(0,1,0))
View(prop_df)
apply(prop_df, 2 , function(x) x/sum(x))
?apply(array, margin, ...)
?apply()
?apply
prop_df <-  data.frame(I=c(1,2,3), III=c(15,22,26), 'IV-A'=c(17,11,7), 'IV-B'=c(23,20,20), 'IV-C'=c(0,1,0))
prop_df <- apply(prop_df, 1 , function(x) x/sum(x))
apply(prop_df , margin, ...)
prop_df
distn_df <-  data.frame(I=c(1,2,3), III=c(15,22,26), 'IV-A'=c(17,11,7), 'IV-B'=c(23,20,20), 'IV-C'=c(0,1,0))
distn_df
distn_df
rownames(distn_df) <- c("Visit1", "Visit2", "Visit3")
distn_df
distn_prop_df <- apply(distn, 1 , function(x) x/sum(x))
distn_prop_df <- apply(distn_df, 1 , function(x) x/sum(x))
distn_prop_df
distn_df
#print("Adonis results: Inflammation")
adonis(BrayDistMat ~ Inflammation, data = dt.ps1.v1.sample_data, permutations = 1000)
library()
library(microbiome)
