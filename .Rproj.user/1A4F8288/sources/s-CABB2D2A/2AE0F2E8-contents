```{r initiate-environment-cytokines_v1, warning=FALSE}
# Set up required packages
.cran_packages <- c("FactoMineR", "factoextra", "ggpubr", "ggrepel", "dplyr", "cowplot")
.bioc_packages <- c()

.inst <- .cran_packages %in% installed.packages()
if(any(!.inst)) {
  install.packages(.cran_packages[!.inst])
}
.inst <- .bioc_packages %in% installed.packages()
if(any(!.inst)) {
  source("http://bioconductor.org/biocLite.R")
  biocLite(.bioc_packages[!.inst], ask = F)
}
# Load packages into session, and print package version
sapply(c(.cran_packages, .bioc_packages), require, character.only = TRUE)

```

## Process Cytokine data

```{r cytokine-analysis}

dt.ps1.cyto <- data.frame(sample_data(ps1.v1.cst.glom.Species.ra)[, allCytokineColnames])
dt.ps1.cyto <- apply(dt.ps1.cyto, 2, as.numeric)
dt.ps1.cyto.scale <- scale(dt.ps1.cyto, center = TRUE, scale = TRUE)

dt.ps1.v1.cst.sample_data <- data.frame(sample_data(ps1.v1.cst.glom.Species.ra))

#use scale.unit TRUE (value set by default) then data are scaled to unit variance
dt.ps1.cyto.pca <- PCA(dt.ps1.cyto.scale, scale.unit = FALSE, graph = FALSE) ##Library FactoMineR


##PCA loadings for principle components
dt.ps1.cyto.pca.loadings <- sweep(dt.ps1.cyto.pca$var$coord,2,sqrt(dt.ps1.cyto.pca$eig[1:5,1]),FUN="/")
head(dt.ps1.cyto.pca.loadings)

dt.ps1.cyto.pca.loadings.ind <- sweep(dt.ps1.cyto.pca$ind$coord,2,sqrt(dt.ps1.cyto.pca$eig[1:5,1]),FUN="/")
head(dt.ps1.cyto.pca$ind$coord)

eig.val <- get_eigenvalue(dt.ps1.cyto.pca)
head(eig.val)


fviz_eig(dt.ps1.cyto.pca, addlabels = TRUE, ylim = c(0, 50))


dt.ps1.cyto.pca.var <- get_pca_var(dt.ps1.cyto.pca)
#dt.ps1.cyto.pca.var

# Coordinates/ principle components
#head(dt.ps1.cyto.pca.var$coord) 
#head(dt.ps1.cyto.pca$ind$coord)

# Cos2: quality on the factore map
#head(dt.ps1.cyto.pca.var$cos2)

# Contributions to the principal components
#head(dt.ps1.cyto.pca.var$contrib)

#Positively correlated variables are grouped together.
#Negatively correlated variables are positioned on opposite sides of the plot origin (opposed quadrants).
#The distance between variables and the origin measures the quality of the variables on the factor map. Variables that are away from the origin are well represented on the factor map.

##Quality of representation
# Color by cos2 values: quality on the factor map
fviz_pca_var(dt.ps1.cyto.pca, col.var = "cos2",
             gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"), 
             repel = TRUE # Avoid text overlapping
             )

##Contributions of variables to PCs
# Contributions of variables to PC1
fviz_contrib(dt.ps1.cyto.pca, choice = "var", axes = 1, top = 16)
#Vector of top contributing in PC1
top.cyto.pc1 <- c("TNF.a", "RANTES", "IL.1b", "HGF", "MIG", "VEGF", "Eotaxin", "SCF", "IL.16", "LIF", "IL.9", "G.CSF", "M.CSF",  "IFN.a2", "IP.10", "TNF.b" )

# Contributions of variables to PC2
fviz_contrib(dt.ps1.cyto.pca, choice = "var", axes = 2, top = 16)
#The red dashed line on the graph above indicates the expected average contribution. 
#If the contribution of the variables were uniform, the expected value would be 1/length(variables) = 1/10 = 10%. For a given component, a variable with a contribution larger than this cutoff could be considered as important in contributing to the component.


# Change the gradient color
fviz_pca_ind(dt.ps1.cyto.pca, col.ind="contrib") +
scale_color_gradient2(low="white", mid="blue", 
                  high="red", midpoint=2.5) + theme_minimal()

# Create a grouping variable using kmeans
# Create 3 groups of variables (centers = 3)
set.seed(123)
dt.ps1.cyto.pca.km <- kmeans(dt.ps1.cyto.pca.var$coord, centers = 4, nstart = 25)
grp <- as.factor(dt.ps1.cyto.pca.km$cluster)
# Color variables by groups
fviz_pca_var(dt.ps1.cyto.pca, col.var = grp, 
             palette = c("#0073C2FF", "#EFC000FF", "#868686FF", "red"),
             legend.title = "Cluster")

#Read in data of top cytokines
dt.ps1.cyto.top <- readRDS("metadata/dt.ps1.cyto.all.RDS")
dt.ps1.cyto.top <- dt.ps1.cyto.top[order(sample.order), , drop = FALSE] #sort data frame of log transformed values
dt.ps1.cyto.top <- dt.ps1.cyto.top[which(!dt.ps1.cyto.top$SampleID %in% NA), ]
rownames(dt.ps1.cyto.top) <- dt.ps1.cyto.top$SampleID

##Extract PC1
pcs_samples <- data.frame(dt.ps1.cyto.pca$ind$coord)

dt.ps1.v1.cst.sample_data <- cbind(dt.ps1.v1.cst.sample_data, PC1 = pcs_samples$Dim.1,  PC2 = pcs_samples$Dim.2)
pca_data <- dt.ps1.v1.cst.sample_data[, c("SampleID","ParticipantID", "sim_CST", "Trichomoniasis", "Gonorrhoea", "Chlamydia", "HSV.2", "STI", "Inflammation", "PSA", "PC1", "PC2", "bvscat")]

pca_data_ct <- merge(pca_data, dt.ps1.cyto.top, by = "SampleID")
```


```{r correlate-pro-inf-cytokines-tax, echo=TRUE}
library(corrplot)

ps1.v1.cst.glom.Species.ra <- prune_samples(sample_sums(ps1.v1.cst.glom.Species.ra) > 0, ps1.v1.cst.glom.Species.ra)
ps1.v1.cst.glom.Species.ra <- prune_taxa(taxa_sums(ps1.v1.cst.glom.Species.ra) > 0, ps1.v1.cst.glom.Species.ra)

V1_otu_tab <- data.frame(otu_table(ps1.v1.cst.glom.Species.ra))
V1_otu_tab1 <- as.data.frame(t(V1_otu_tab))
V1_otu_tab1$OTU <- rownames(V1_otu_tab1)

V1_tax_tab <- data.frame(tax_table(ps1.v1.cst.glom.Species.ra))
V1_tax_tab$OTU <- rownames(V1_tax_tab)

dataWSpecies <- merge(V1_otu_tab1, V1_tax_tab[, c("OTU", "Species")], by = "OTU")
dataWSpecies <- dataWSpecies[!duplicated(dataWSpecies$Species), ]
dataWSpecies <- dataWSpecies[, -1]

rownames(dataWSpecies) <- dataWSpecies$Species

t.dataWSpecies <- t(dataWSpecies[, -ncol(dataWSpecies)])
#View(t.dataWSpecies)

corrData <- data.frame(sample_data(ps1.v1.cst.glom.Species.ra))
corrdataSpecies <-  corrData[, c(proInfC)]
corrdataSpecies <- apply(corrdataSpecies, 2, as.numeric)

##Plot cytokines with bacteria

## PCA plot - all cytoekies

allCytokines <- corrData[, allCytokineColnames]
allCytokines <- apply(allCytokines, 2, as.numeric)
t.dataWSpecies <- apply(t.dataWSpecies, 2, as.numeric)

# Reformat species column names so they are easier to follow
SpeciesColNames <- colnames(t.dataWSpecies)
colnames(t.dataWSpecies) <-  SpeciesColNames

cyto.all <- cbind(t.dataWSpecies , allCytokines)
cyto.all <- apply(cyto.all, 2, as.numeric)
cyto.all.pca <- PCA(scale(cyto.all, center = TRUE, scale = TRUE), scale.unit = FALSE, graph = FALSE)

cex.before <- par("cex")
par(cex = 0.7)
corrplot::corrplot(cor(t.dataWSpecies , allCytokines), type="full", 
         p.mat = cyto.all.pca$P, sig.level = 0.001, insig = "blank", number.font = 4)


##PCA plot - only proinflamatory
#colnames(t.dataWSpecies) <-  c("P. amnii", "P. timonensis", "P. bivia", "G. vaginalis", "A. vaginae", "P. anaerobius", "S. anginosus", "S. agalactie", "L. vaginalis", "V. montpellierensis", "D. micraerophilus", "L. crispatus", "L. jensenii", "L. iners", "S. moniliformis")
cyto.spec <- cbind(t.dataWSpecies , corrdataSpecies)
cyto.spec.pca <- PCA(scale(cyto.spec, center = TRUE, scale = TRUE), scale.unit = FALSE, graph = FALSE)


corrplot::corrplot(cor(t.dataWSpecies , corrdataSpecies), type="full", 
         p.mat = cyto.spec.pca$P, sig.level = 0.001, insig = "blank")
par(cex = cex.before)
```


### Individual STIs vs PC1
```{r}

## STIs against cytokine principle component one
comparisons.1 <- list( c("I-A", "I-B"), c("I-A", "II"), c("II", "III") , c("I-A", "IV-B"))
symnum.args <- list(cutpoints = c(0, 0.0001, 0.001, 0.01, 0.05, 1), symbols = c("****", "***", "**", "*", "ns"))

# Any STI vs PC1 (any STI) 
table(pca_data_ct$STI)

#compare_means(PC1 ~ STI, pca_data_ct)
p.anysti.pc1 <- ggboxplot( pca_data_ct, x = "STI", y = "PC1", color = "STI", palette = "jco", add = "jitter", xlab = "STIs") +
  theme_light()
p.anysti.pc1 + stat_compare_means()
p.anysti.pc1 + stat_compare_means(aes(label = ..p.signif..))


# Trichomoniasis vs PC1
table(pca_data_ct$Trichomoniasis) #The huge variation in the numbers could a contributing factor
#compare_means(PC1 ~ Trichomoniasis, pca_data_ct)
p.tri_pc1 <- ggboxplot( pca_data_ct, x = "Trichomoniasis", y = "PC1", color = "Trichomoniasis", palette = "jco", add = "jitter") +
  theme_light() + 
          xlab("Trichomoniasis")
#  Add p-value
p.tri_pc1 + stat_compare_means(aes(label = ..p.signif..))

# HSV2 vs PC1
table(pca_data_ct$HSV.2)
#compare_means(PC1 ~ HSV.2, pca_data_ct)
p.hsv2_pc1 <- ggboxplot( pca_data_ct, x = "HSV.2", y = "PC1", color = "HSV.2", palette = "jco", add = "jitter") +
  theme_light() + 
          xlab("HSV 2")
#  Add p-value
p.hsv2_pc1 + stat_compare_means(aes(label = ..p.signif..))


# Chlamydia vs PC1
table(pca_data_ct$Chlamydia)
#compare_means(PC2 ~ Chlamydia, pca_data_ct)
p.chl_pc1 <- ggboxplot( pca_data_ct, x = "Chlamydia", y = "PC1", color = "Chlamydia", palette = "jco", add = "jitter") +
  theme_light() + 
          xlab("Chlamydia")
#  Add p-value
p.chl_pc1 + stat_compare_means(aes(label = ..p.signif..))


# Gonorrhoea vs PC1
table(pca_data_ct$Gonorrhoea)
#compare_means(PC1 ~ Gonorrhoea , pca_data_ct)
p.gon_pc1 <- ggboxplot( pca_data_ct, x = "Gonorrhoea", y = "PC1", color = "Gonorrhoea", palette = "jco", add = "jitter") +
  theme_light() + 
          xlab("Gonorrhoea")
#  Add p-value
p.gon_pc1 + stat_compare_means(aes(label = ..p.signif..))


# PSA vs PC1
table(pca_data_ct$PSA)
#compare_means(PC1 ~ PSA , pca_data_ct)
p.psa_pc1 <- ggboxplot( pca_data_ct, x = "PSA", y = "PC1", color = "PSA", palette = "jco", add = "jitter") +
  theme_light() + 
          xlab("PSA")
#  Add p-value
p.psa_pc1 + stat_compare_means(aes(label = ..p.signif..))

```

### Any STI only samples:  CTS vs PC1 and pro inflamatory Cytokines

```{r }
## Any STI vs pro inflamatory Cytokines
# Subset only samples with STI
dt.ps1.STIs <- pca_data_ct %>% dplyr::select(everything()) %>% filter(STI == 1)
any(dt.ps1.STIs$STI == 0) #Confirm no negatives

# Distribution of STIs by CST
table(dt.ps1.STIs$STI, dt.ps1.STIs$sim_CST)

# No STIs vs cytokine PC1
#compare_means(PC1 ~ CSTs , dt.ps1.STIs, method = "kruskal.test")
p.STIs <- ggboxplot(dt.ps1.STIs, x = "sim_CST", y = "PC1", color = "sim_CST", palette = CSTsPallete, add = "jitter") +
  theme_light() +
  xlab("CSTs")
p.STIs + stat_compare_means(aes(label = ..p.signif..), comparisons = comparisons.1) #+
 # stat_compare_means(aes(label = ..p.signif..))     # Add global p-value

## Start with Cytokines from Andile

#Set up comparisons
my_comparisons <- list( c("I-A", "I-B"), c("I-A", "II"), c("II", "III-A"), c("III-A", "IV-A"), c("III-B", "IV-B"), c("IV-B", "V"), c("III-A", "IV-B"), c("III-B", "IV-A"), c("II", "V"), c("I-B", "IV-B")) 

# STIs vs Cytokines (IL.1b)
#compare_means(IL.1b ~ CSTs, dt.ps1.STIs)
p.STIs.IL.1b <- ggboxplot(dt.ps1.STIs, x = "sim_CST", y = "IL.1b", color = "sim_CST", palette = CSTsPallete, add = "jitter") +
  theme_light() +
  xlab("CSTs")
p.STIs.IL.1b + stat_compare_means(aes(label = ..p.signif..), comparisons = my_comparisons) #+
  #stat_compare_means(aes(label = ..p.signif..), method = "kruskal.test")

# STIs vs Cytokines (IL.6)
#compare_means(IL.6 ~ CSTs, dt.ps1.STIs)
p.STIs.IL.6 <- ggboxplot(dt.ps1.STIs, x = "sim_CST", y = "IL.6", color = "sim_CST", palette = CSTsPallete, add = "jitter") +
  theme_light() +
  xlab("CSTs")
p.STIs.IL.6 + stat_compare_means(aes(label = ..p.signif..), comparisons = my_comparisons) #+
  #stat_compare_means(aes(label = ..p.signif..), method = "kruskal.test")

# STIs vs Cytokines (TNF.a)
#compare_means(TNF.a ~ CSTs, dt.ps1.STIs)
p.STIs.TNF.a <- ggboxplot(dt.ps1.STIs, x = "sim_CST", y = "TNF.a", color = "sim_CST", palette = CSTsPallete, add = "jitter")  +
  xlab("CSTs") +
  theme_light() + 
  stat_compare_means(aes(label = ..p.signif..), comparisons = my_comparisons) #+
  #stat_compare_means(aes(label = ..p.signif..), method = "kruskal.test")
p.STIs.TNF.a

# STIs vs Cytokines (IL.1a)
#compare_means(IL.1a ~ CSTs, dt.ps1.STIs)
p.STIs.IL.1a <- ggboxplot(dt.ps1.STIs, x = "sim_CST", y = "IL.1a", color = "sim_CST", palette = CSTsPallete, add = "jitter") +
  theme_light() +
  xlab("CSTs")
p.STIs.IL.1a + stat_compare_means(aes(label = ..p.signif..), comparisons = my_comparisons) #+
  #stat_compare_means(aes(label = ..p.signif..), method = "kruskal.test")

# STIs vs Cytokines (IL.8)
#compare_means(IL.8 ~ CSTs, dt.ps1.STIs, method = "kruskal.test")
p.STIs.IL.8 <- ggboxplot(dt.ps1.STIs, x = "sim_CST", y = "IL.8", color = "sim_CST", palette = CSTsPallete, add = "jitter") +
  theme_light() +
  xlab("CSTs")
p.STIs.IL.8 + stat_compare_means(aes(label = ..p.signif..), comparisons = my_comparisons) #+
  #stat_compare_means(aes(label = ..p.signif..), method = "kruskal.test")

# STIs vs Cytokines (IP.10)
#compare_means(IP.10 ~ CSTs, dt.ps1.STIs, method = "kruskal.test")
p.STIs.IP.10 <- ggboxplot(dt.ps1.STIs, x = "sim_CST", y = "IP.10", color = "sim_CST", palette = CSTsPallete, add = "jitter") +
  theme_light() +
  xlab("CSTs")
p.STIs.IP.10 + stat_compare_means(aes(label = ..p.signif..), comparisons = my_comparisons) #+
 # stat_compare_means(aes(label = ..p.signif..), method = "kruskal.test")

# STIs vs Cytokines (MCP.1)
#compare_means(MCP.1 ~ CSTs, dt.ps1.STIs, method = "kruskal.test")
p.STIs.MCP.1 <- ggboxplot(dt.ps1.STIs, x = "sim_CST", y = "MCP.1", color = "sim_CST", palette = CSTsPallete, add = "jitter") +
  theme_light() +
  xlab("CSTs")
p.STIs.MCP.1 + stat_compare_means(aes(label = ..p.signif..), comparisons = my_comparisons) #+
  #stat_compare_means(aes(label = ..p.signif..), method = "kruskal.test")

# STIs vs Cytokines (MIP-1α)
#compare_means(MIP.1a ~ CSTs, dt.ps1.STIs, method = "kruskal.test")
p.STIs.MIP.1a <- ggboxplot(dt.ps1.STIs, x = "sim_CST", y = "MIP.1a", color = "sim_CST", palette = CSTsPallete, add = "jitter") +
  theme_light() +
  xlab("CSTs")
p.STIs.MIP.1a + stat_compare_means(aes(label = ..p.signif..), comparisons = my_comparisons) #+
  #stat_compare_means(aes(label = ..p.signif..), method = "kruskal.test")

# STIs vs Cytokines (MIP-1b)
#compare_means(MIP.1b ~ CSTs, dt.ps1.STIs, method = "kruskal.test")
p.STIs.MIP.1b <- ggboxplot(dt.ps1.STIs, x = "sim_CST", y = "MIP.1b", color = "sim_CST", palette = CSTsPallete, add = "jitter") +
  theme_light() +
  xlab("CSTs")
p.STIs.MIP.1b + stat_compare_means(aes(label = ..p.signif..), comparisons = my_comparisons) #+
  #stat_compare_means(aes(label = ..p.signif..), method = "kruskal.test")

## Add cytokines Melis

# STIs vs Cytokines (IL.12p70)
#compare_means(IL.12p70 ~ CSTs, dt.ps1.STIs)
# Visualize
p.STIs.IL.12p70 <- ggboxplot(dt.ps1.STIs, x = "sim_CST", y = "IL.12p70", color = "sim_CST", palette = CSTsPallete, add = "jitter") +
   xlab("CSTs") +
  theme_light()
p.STIs.IL.12p70 + stat_compare_means(aes(label = ..p.signif..), comparisons = my_comparisons) #+
 # stat_compare_means(aes(label = ..p.signif..), method = "kruskal.test")

# STIs vs Cytokines (IL.4)
#compare_means(IL.4 ~ CSTs, dt.ps1.STIs)
p.STIs.IL.4 <- ggboxplot(dt.ps1.STIs, x = "sim_CST", y = "IL.4", color = "sim_CST", palette = CSTsPallete, add = "jitter", xlab = "CSTs") +
  theme_light() +
  xlab("CSTs") 
p.STIs.IL.4 + stat_compare_means(aes(label = ..p.signif..), comparisons = my_comparisons) #+
  #stat_compare_means(aes(label = ..p.signif..), method = "kruskal.test")

## Cytokines based on heatmap

#STIs vs Cytokines (GROa)
#compare_means(GROa ~ CSTs,  dt.ps1.STIs)
p.STIs.GROa <- ggboxplot(dt.ps1.STIs, x = "sim_CST", y = "GROa", color = "sim_CST", palette = CSTsPallete, add = "jitter") +
  theme_light() +
  xlab("CSTs")
p.STIs.GROa + stat_compare_means(aes(label = ..p.signif..), comparisons = my_comparisons) #+
  #stat_compare_means(aes(label = ..p.signif..), method = "kruskal.test")

```

### No STI samples only:  CTS vs PC1 and pro inflamatory Cytokines

```{r no-sti-vs-cts}
## Subset samples with no STI (any)
dt.ps1.NoSTIs <- pca_data_ct %>% dplyr::select(everything()) %>% filter(STI == 0)
any(dt.ps1.NoSTIs$STI == 1) #confirm that no samples with STIs are in the dataset still

# Distribution of STIs by CST
table(dt.ps1.NoSTIs$STI, dt.ps1.NoSTIs$sim_CST)

# No STIs vs cytokine PC1
#compare_means(PC1 ~ CSTs , dt.ps1.NoSTIs, method = "kruskal.test")
p.noSTIs <- ggboxplot(dt.ps1.NoSTIs, x = "sim_CST", y = "PC1", color = "sim_CST", palette = CSTsPallete, add = "jitter", xlab = "sim_CST") +
  theme_light()  +
  xlab("CSTs")
p.noSTIs + stat_compare_means(aes(label = ..p.signif..), comparisons = comparisons.1) #+
  #stat_compare_means(aes(label = ..p.signif..) )     # Add global p-value

## Start with Cytokines from Andile

# No-STIs vs Cytokines (IL.1b)
#compare_means(IL.1b ~ CSTs, dt.ps1.NoSTIs)
p.noSTIs.IL.1b <- ggboxplot(dt.ps1.NoSTIs, x = "sim_CST", y = "IL.1b", color = "sim_CST", palette = CSTsPallete, add = "jitter", xlab = "sim_CST") +
  theme_light() +
  xlab("CSTs")
p.noSTIs.IL.1b + stat_compare_means(aes(label = ..p.signif..), comparisons = my_comparisons) #+
  #stat_compare_means(aes(label = ..p.signif..), method = "kruskal.test")

# No STIs vs Cytokines (IL.6)
#compare_means(IL.6 ~ CSTs, dt.ps1.NoSTIs)
p.NoSTIs.IL.6 <- ggboxplot(dt.ps1.NoSTIs, x = "sim_CST", y = "IL.6", color = "sim_CST", palette = CSTsPallete, add = "jitter", xlab = "sim_CST") +
  theme_light() +
  xlab("CSTs")
p.NoSTIs.IL.6 + stat_compare_means(aes(label = ..p.signif..), comparisons = my_comparisons) #+
 # stat_compare_means(aes(label = ..p.signif..), method = "kruskal.test")

# No-STIs vs Cytokines (TNF.a)
#compare_means(TNF.a ~ CSTs, dt.ps1.NoSTIs)
p.noSTIs.TNF.a <- ggboxplot(dt.ps1.NoSTIs, x = "sim_CST", y = "TNF.a", color = "sim_CST", palette = CSTsPallete, add = "jitter", 
                            xlab = "sim_CST") +
  theme_light() +
  xlab("CSTs")
p.noSTIs.TNF.a + stat_compare_means(aes(label = ..p.signif..), comparisons = my_comparisons) #+
 # stat_compare_means(aes(label = ..p.signif..), method = "kruskal.test")

# No-STIs vs Cytokines (IL.1a)
#compare_means(IL.1a ~ CSTs, dt.ps1.NoSTIs)
p.noSTIs <- ggboxplot(dt.ps1.NoSTIs, x = "sim_CST", y = "IL.1a", color = "sim_CST", palette = CSTsPallete, add = "jitter", 
                      desc_stat = "median_iqr", xlab = "sim_CST") +
  xlab("CSTs")
p.noSTIs + stat_compare_means(aes(label = ..p.signif..), comparisons = my_comparisons) #+
  #stat_compare_means(aes(label = ..p.signif..), method = "kruskal.test")

# No-STIs vs Cytokines (IL.8) 
ggerrorplot(dt.ps1.NoSTIs, x = "sim_CST", y = "TNF.a", palette = CSTsPallete,
            desc_stat = "median_iqr", color = "sim_CST",
            add = "jitter", add.params = list(color = "darkgray")) +
  theme_light() + 
  stat_compare_means(aes(label = ..p.signif..), comparisons = my_comparisons) +
  xlab("CSTs") #+ # Add pairwise comparisons p-value
  #stat_compare_means(aes(label = ..p.signif..))                  # Add global p-value


# No-STIs vs Cytokines (IP.10)
#compare_means(IP.10 ~ CSTs, dt.ps1.NoSTIs, method = "kruskal.test")
p.noSTIs.IP.10 <- ggerrorplot(dt.ps1.NoSTIs, x = "sim_CST", y = "IP.10", color = "sim_CST", palette = CSTsPallete, 
                        add = "jitter", desc_stat = "median_iqr", xlab = "sim_CST") +
  theme_light() +
  xlab("CSTs")
p.noSTIs.IP.10 + stat_compare_means(aes(label = ..p.signif..), comparisons = my_comparisons) #+
                 # stat_compare_means(aes(label = ..p.signif..), method = "kruskal.test")

# No-STIs vs Cytokines (MCP.1)
#compare_means(MCP.1 ~ CSTs, dt.ps1.NoSTIs, method = "kruskal.test")
p.NoSTIs.MCP.1 <- ggboxplot(dt.ps1.NoSTIs, x = "sim_CST", y = "MCP.1", color = "sim_CST", palette = CSTsPallete, add = "jitter") +
  theme_light() +
  xlab("CSTs")
p.NoSTIs.MCP.1 + stat_compare_means(aes(label = ..p.signif..), comparisons = my_comparisons) #+
  #stat_compare_means(aes(label = ..p.signif..), method = "kruskal.test")

# No-STIs vs Cytokines (MIP-1α)
#compare_means(MIP.1a ~ CSTs, dt.ps1.NoSTIs, method = "kruskal.test")
p.NoSTIs.MIP.1a <- ggboxplot(dt.ps1.NoSTIs, x = "sim_CST", y = "MIP.1a", color = "sim_CST", palette = CSTsPallete, add = "jitter") +
  theme_light() +
  xlab("CSTs")
p.NoSTIs.MIP.1a + stat_compare_means(aes(label = ..p.signif..), comparisons = my_comparisons) #+
  #stat_compare_means(aes(label = ..p.signif..), method = "kruskal.test")

# No-STIs vs Cytokines (MIP-1b)
#compare_means(MIP.1b ~ CSTs, dt.ps1.NoSTIs, method = "kruskal.test")
p.NoSTIs.MIP.1b <- ggboxplot(dt.ps1.NoSTIs, x = "sim_CST", y = "MIP.1b", color = "sim_CST", palette = CSTsPallete, add = "jitter") +
  theme_light() +
  xlab("CSTs")
p.NoSTIs.MIP.1b + stat_compare_means(aes(label = ..p.signif..), comparisons = my_comparisons) #+
  #stat_compare_means(aes(label = ..p.signif..), method = "kruskal.test")


## Add cytokines Melis

# No-STIs vs Cytokines (IFN.g)
#compare_means(IFN.g ~ CSTs, dt.ps1.NoSTIs)
p.noSTIs.IFN.g <- ggboxplot(dt.ps1.NoSTIs, x = "sim_CST", y = "IFN.g", color = "sim_CST", palette = CSTsPallete, add = "jitter", xlab = "sim_CST") +
  theme_light() +
  xlab("CSTs")
p.noSTIs.IFN.g + stat_compare_means(aes(label = ..p.signif..), comparisons = my_comparisons) #+
  #stat_compare_means(aes(label = ..p.signif..), method = "kruskal.test")

# No-STIs vs Cytokines (IL.4)
#compare_means(IL.4 ~ CSTs, dt.ps1.NoSTIs, method = "kruskal.test")
p.noSTIs <- ggboxplot(dt.ps1.NoSTIs, x = "sim_CST", y = "IL.4", color = "sim_CST", palette = CSTsPallete, add = "jitter") +
  theme_light() +
  xlab("CSTs")
p.noSTIs + stat_compare_means(aes(label = ..p.signif..), comparisons = my_comparisons) #+
  #stat_compare_means(aes(label = ..p.signif..), method = "kruskal.test")

# No-STIs vs Cytokines (12p70)
#compare_means(IL.12p70 ~ CSTs, dt.ps1.NoSTIs, method = "kruskal.test")
p.noSTIs.12p70 <- ggboxplot(dt.ps1.NoSTIs, x = "sim_CST", y = "IL.12p70", color = "sim_CST", palette = CSTsPallete, add = "jitter") +
  theme_light() +
  xlab("CSTs")
p.noSTIs.12p70 + stat_compare_means(aes(label = ..p.signif..), comparisons = my_comparisons) #+
  #stat_compare_means(aes(label = ..p.signif..), method = "kruskal.test")

## Cytokines based on heatmap

# STIs vs Cytokines (GROa)
#compare_means(GROa ~ CSTs, dt.ps1.NoSTIs)
p.NoSTIs.GROa <- ggboxplot( dt.ps1.NoSTIs, x = "sim_CST", y = "GROa", color = "sim_CST", palette = CSTsPallete, add = c("jitter", "median_iqr")) +
  xlab("CSTs") +
  theme_light()
p.NoSTIs.GROa + stat_compare_means(aes(label = ..p.signif..), comparisons = my_comparisons) #+
  #stat_compare_means(aes(label = ..p.signif..), method = "kruskal.test")

```


