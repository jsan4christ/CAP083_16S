"0","  physeq <- ps2.v2.cst.glom.species.ra"
"0","  top25 <- names(sort(taxa_sums(physeq), decreasing=T))[1:20]"
"0","  physeq.top25 <- prune_taxa(top25, physeq)"
"0","  "
"0","  # Sorting vars"
"0","  taxa.order <- names(sort(taxa_sums(physeq.top25)))"
"0","  sample.order <- rownames(sample_data(physeq.top25)[order(get_variable(physeq.top25, ""sim_CST""), get_variable(physeq.top25, ""ShannonLgT""))])"
"0","  "
"0","  hm <- plot_heatmap.2(physeq.top25, taxa.label=""Species"", sample.order=sample.order, taxa.order=taxa.order)"
"2","Scale for 'fill' is already present. Adding another scale for 'fill', which will replace the existing scale.
"
"0","  hm <- hm + theme(axis.title.x = element_text(size=10),"
"0","                   axis.title.y = element_text(size=10),"
"0","                   axis.text.x = element_blank(),"
"0","                   axis.text.y = element_text(size=7),"
"0","                   plot.title = element_text(size=8),"
"0","                   legend.text = element_text(size=7),"
"0","                   legend.title = element_text(size=8),"
"0","                   # legend.margin = unit(c(0.1,0.1,0.1,0.1),""mm""),"
"0","                   # legend.key.height = unit(1, ""in""),"
"0","                   legend.key.width = unit(0.15, ""in"")#,"
"0","                   #plot.margin=unit(c(0,0,0,0),""mm"")"
"0","                   )"
"0","  "
"0","  CSTColors <- brewer.pal(11,""Paired"")[c(1,2,3,4,5,6,7,8,9,10,11)] # Length 5 for consistency with pre-revision CT coloration"
"0","  names(CSTColors) <- CSTs"
"0","  CSTColorScale <- scale_colour_manual(name = ""CST"", values = CSTColors[1:11])"
"0","  CSTFillScale <- scale_fill_manual(name = ""CST"", values = CSTColors[1:11])"
"0","  "
"0","  ### CHANGING SPECIES TO TAXA ON YLABEL"
"0","  labvec <- as(tax_table(physeq.top25)[, ""Species""], ""character"")"
"0","  names(labvec) <- taxa_names(physeq.top25)"
"0","  labvec <- labvec[taxa.order]"
"0","  #labvec[is.na(labvec)] <- """""
"0","  "
"0","  df.physeq <- data.frame(sample_data(physeq.top25))"
"0","  df.physeq <- df.physeq[sample.order,] #resolve"
"0","  df.physeq$index <- seq(1, nsamples(physeq.top25))"
"0","  "
"0","  hcb <- make_hcb(df.physeq, ""sim_CST"", name = ""sim_CST"", fillScale = CSTFillScale)"
"0","  hcb <- hcb + annotate(""text"", x=tapply(df.physeq$index, df.physeq[, ""sim_CST"", drop=T], mean), y=1,"
"0","                        label=levels(df.physeq[, ""sim_CST"", drop=T]), size=2)"
"0","  "
"0","  Chl <- make_hcb(df.physeq, ""Chlamydia"", name=""Chlamydia"", "
"0","                  fillScale = scale_fill_manual(values=c(""0""=""grey90"", ""1""=""tan4"")))"
"0","  Gon <- make_hcb(df.physeq, ""Gonorrhoea"", name=""Gonorrhoea"", "
"0","                  fillScale = scale_fill_manual(values=c(""0""=""grey90"", ""1""=""green4"")))"
"0","  Tri <- make_hcb(df.physeq, ""Trichomoniasis"", name=""Trichomoniasis"", "
"0","                  fillScale = scale_fill_manual(values=c(""0""=""grey90"", ""1""=""yellow4"")))"
"0","  Cand <- make_hcb(df.physeq, ""Candidiasis"", name=""Candidiasis"", "
"0","                   fillScale = scale_fill_manual(values=c(""0""=""grey90"", ""1""=""tomato4"")))"
"0","  inf <- make_hcb(df.physeq, ""Inflammation"", name=""Inflammation"", "
"0","                  fillScale = scale_fill_manual(values=c(""0""=""grey90"", ""1""=""darkred"")))"
"0","  bvscores <- make_hcb(df.physeq, ""bvscat"", name=""Nuggent Score"", "
"0","                       fillScale = scale_fill_manual(values=c(""Negative""=""white"", ""Intermediate""=""grey60"", ""BV""=""maroon"")))"
"0","  "
"0","  inf <- inf + theme(axis.text.y = element_text(size=8, face=""bold"", color=""grey60""))"
"0","  Chl <- Chl + theme(axis.text.y = element_text(size=8, face=""bold"", color=""tan4""))    "
"0","  Gon <- Gon + theme(axis.text.y = element_text(size=8, face=""bold"", color=""green4""))"
"0","  Tri  <- Tri + theme(axis.text.y = element_text(size=8, face=""bold"", color=""yellow4"")) "
"0","  Cand <- Cand + theme(axis.text.y = element_text(size=8, face=""bold"", color=""tomato4""))"
"0","  "
"0","  Fig <- mush(hm, list(Chl, Gon, Tri, Cand, inf, bvscores, hcb))"
"2","Removed 1 rows containing missing values (geom_raster)."
"0","  grid.newpage()"
