"0","source(paste0(""scripts/"", ""custom_microbiome_functions.R""))"
"0","#library(ggplot2)"
"0","#library(phyloseq)"
"0","library(data.table)"
"0","#data(GlobalPatterns)"
"0","# Remove OTUs not 3 greater than 3"
"0","#keepTaxa = apply(X = as(otu_table(ps2.v1.cst.glom.Species.ra), ""matrix"") > 10L,"
"0","#                 MARGIN = 2, FUN = sum) >= 10L"
"0","#phy = prune_taxa(keepTaxa, ps2.v1.cst.glom.Species.ra)"
"0","# get abundance in %"
"0","#phy <- transform_sample_counts(ps2.v1.cst.glom.Species.ra, function(x)  x/sum(x))"
"0","# agglomerate taxa"
"0","#glom <- tax_glom(phy, taxrank = 'Species')"
"0","ps2.v1.cst.merged <-merge_less_than_top(ps2.v1.cst.glom.species.ra, 14)"
"0","# create dataframe from phyloseq object"
"0","dat <- data.table(psmelt(ps2.v1.cst.merged))"
"0","# convert Phylum to a character vector from a factor because R"
"0","dat$Species <- as.character(dat$Species)"
"0","# group dataframe by Phylum, calculate median rel. abundance"
"0","#dat <- dat[, median := median(Abundance, na.rm = TRUE), by = ""Phylum""]"
"0","# Change name to remainder of Phylum less than 1%"
"0","#dat[(median <= 0.0001), Species := ""Others""]"
"0","#sort samples by CSTs and Abundance"
"0","dat <- dat[order(sim_CST, Abundance), ]"
"0","dat$ParticipantID <- as.character(dat$ParticipantID)"
"0","#Bar plot"
"0","colourCount = length(unique(dat$Sample))"
"0","getPalette = colorRampPalette(brewer.pal(9, ""Set1""))"
"0","p <- ggplot(dat, aes(x=ParticipantID, y=Abundance, fill=Species)) + "
"0","        geom_bar(aes(), stat=""identity"", position=""stack"") + "
"0","        #scale_fill_manual(values=getPalette(colourCount)) + "
"0","        scale_fill_manual(values=customPalette) + "
"0","        #scale_fill_viridis_d() +"
"0","        theme(legend.position=""bottom"","
"0","        #axis.text.x = element_blank(),"
"0","        axis.text.x = element_text(size = 6, angle = 90),"
"0","        legend.text = element_text(size = 8)) + "
"0","        facet_grid(. ~ sim_CST, drop=TRUE,scale=""free"",space=""free_x"") + "
"0","        guides(fill=guide_legend(nrow=5)) "
"0","p <- p+ theme(strip.background = element_rect(fill=""white"", colour = ""white"", size = 4),"
"0","                    strip.text = element_text(face=""bold"", size=7),"
"0","                    panel.spacing = unit(0, ""lines"") #get rid of facet margins"
"0","              )"
"0","g <- ggplot_gtable(ggplot_build(p))"
"0","stripr <- which(grepl('strip-t', g$layout$name))"
"0","fills <- CSTsPallete  #c(""#A6CEE3"", ""#1F78B4"", ""#B2DF8A"", ""#33A02C"", ""#990099"")"
"0","k <- 1"
"0","for (i in stripr) {"
"0","j <- which(grepl('rect', g$grobs[[i]]$grobs[[1]]$childrenOrder))"
"0","g$grobs[[i]]$grobs[[1]]$children[[j]]$gp$fill <- fills[k]"
"0","k <- k+1"
"0","}"
"0","grid.newpage()"
