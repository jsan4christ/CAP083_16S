"0","# Plot the data by the treatment variable"
"0","y = 1000 # Set a threshold for the minimum number of acceptable reads. Can start as a guess"
"0","x = ""bvscat"" # Set the x-axis variable you want to examine"
"0","label = ""SampleID"" # This is the label you want to overlay on the points"
"0","ord.pcoa.jac <- ordinate(ps2.v1v2v3.glom.species.ra, method = ""PCoA"", distance = ""jaccard"")"
"0","p.pcoa.jac <- plot_ordination(ps2.v1v2v3.glom.species.ra, ord.pcoa.jac, color = ""sim_CST"" , axes = c(1,2)) +"
"0","  geom_point(size = 1) +"
"0","  scale_fill_manual(""CSTs"", breaks = CSTs_all, values = CSTsPalleteNamed) +"
"0","  labs(title = ""PCoA of Jacard (Presence/Absence)"", color = ""CSTs"") +"
"0","  stat_ellipse(type = ""t"") +"
"0","  theme_minimal()"
"0","p.pcoa.bray <- plot_ordination(ps2.v1v2v3.glom.species.ra, ord.ps2.v1v2v3.glom.species.ra.pcoa.bray, color = ""sim_CST"", axes = c(1,2)) +"
"0","  geom_point(size = 1) +"
"0","  scale_fill_manual(""CSTs"", breaks = CSTs_all, values = CSTsPalleteNamed) +"
"0","  labs(title = ""PCoA of Bray Curtis (Abundance)"", color = ""CSTs"") +"
"0","  stat_ellipse(type = ""t"") +"
"0","  theme_minimal()"
"0","ord.pcoa.unif <- ordinate(ps2.v1v2v3.glom.species.ra, method = ""PCoA"", distance = ""unifrac"")"
"0","p.pcoa.unif <- plot_ordination(ps2.v1v2v3.glom.species.ra, ord.pcoa.unif, color = ""sim_CST"" , axes = c(1,2)) +"
"0","  scale_fill_manual(""CSTs"", breaks = CSTs_all, values = CSTsPalleteNamed) +"
"0","  geom_point(size = 1) +"
"0","  labs(title = ""PCoA of Unifrac Distance"", color = ""CSTs"") +"
"0","  stat_ellipse(type = ""t"") +"
"0","  theme_minimal()"
"0","ord.pcoa.wunif <- ordinate(ps2.v1v2v3.glom.species.ra, method = ""PCoA"", distance = ""wunifrac"")"
"0","p.pcoa.wunif <- plot_ordination(ps2.v1v2v3.glom.species.ra, ord.pcoa.wunif, color = ""sim_CST"", axes = c(1,2)) +"
"0","  scale_fill_manual(""CSTs"", breaks = CSTs_all, values = CSTsPalleteNamed) +"
"0","  geom_point(size = 1) +"
"0","  labs(title = ""PCoA of W. Unifrac"", color = ""CSTs"") +"
"0","  stat_ellipse(type = ""t"") +"
"0","  theme_minimal()"
"0","grid.arrange(p.pcoa.jac, p.pcoa.bray, p.pcoa.unif, p.pcoa.wunif, ncol = 2, nrow = 2)"
