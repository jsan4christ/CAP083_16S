"0","#ps2.v1.cst.glom.Species.ra <- transform_sample_counts(ps2.v1.cst.glom.Species, function(x) round(100 * x/sum(x)))"
"0","#ps2.v1.cst.glom.Species.ra"
"0","####Create transition matrix###"
"0","dt.ps2.v1.net <- data.frame(sample_data(ps2.v1.cst.glom.species.ra))"
"0","dt.ps2.v2.net <- data.frame(sample_data(ps2.v2.cst.glom.species.ra))"
"0","dt.ps2.v3.net <- data.frame(sample_data(ps2.v3.cst.glom.species.ra))"
"0","cat(""\n Visit 1 - BV/CST Distribution"")"
"1","
 Visit 1 - BV/CST Distribution"
"0","dt.ps2.v1.net <- subset(dt.ps2.v1.net, VisitCode == 1000, select = c(SampleID, ParticipantID, VisitCode, bvscat, sim_CST))"
"0","dt.ps2.v1.net <- dt.ps2.v1.net[order(dt.ps2.v1.net$ParticipantID),]"
"0","table(dt.ps2.v1.net$bvscat, dt.ps2.v1.net$sim_CST)"
"1","              
"
"1","              "
"1","  I"
"1"," III"
"1"," IV-A"
"1"," IV-B"
"1","
  Intermediate"
"1","  1"
"1","   7"
"1","    7"
"1","    7"
"1","
  BV          "
"1","  0"
"1","   8"
"1","   10"
"1","   16"
"1","
"
"0","cat(""\n"")"
"1","
"
"0","cat(""\n Visit 2 - BV/CST Distribution"")"
"1","
 Visit 2 - BV/CST Distribution"
"0","dt.ps2.v2.net <- subset(dt.ps2.v2.net, VisitCode == 1020, select = c(SampleID, ParticipantID, VisitCode, bvscat, sim_CST))"
"0","dt.ps2.v2.net <- dt.ps2.v2.net[order(dt.ps2.v2.net$ParticipantID),]"
"0","table(dt.ps2.v2.net$bvscat, dt.ps2.v2.net$sim_CST)"
"1","              
"
"1","              "
"1","  I"
"1"," III"
"1"," IV-A"
"1"," IV-B"
"1"," IV-C"
"1","
  Negative    "
"1","  1"
"1","  14"
"1","    0"
"1","    2"
"1","    0"
"1","
  Intermediate"
"1","  1"
"1","   6"
"1","    1"
"1","   11"
"1","    0"
"1","
  BV          "
"1","  0"
"1","   2"
"1","   10"
"1","    7"
"1","    1"
"1","
"
"0","cat(""\n"")"
"1","
"
"0","cat(""\n Visit 3 - BV/CST Distribution"")"
"1","
 Visit 3 - BV/CST Distribution"
"0","dt.ps2.v2.net <- subset(dt.ps2.v3.net, VisitCode == 1030, select = c(SampleID, ParticipantID, VisitCode, bvscat, sim_CST))"
"0","dt.ps2.v3.net <- dt.ps2.v3.net[order(dt.ps2.v3.net$ParticipantID),]"
"0","table(dt.ps2.v3.net$bvscat, dt.ps2.v3.net$sim_CST)"
"1","              
"
"1","              "
"1","  I"
"1"," III"
"1"," IV-A"
"1"," IV-B"
"1","
  Negative    "
"1","  3"
"1","  10"
"1","    0"
"1","    0"
"1","
  Intermediate"
"1","  0"
"1","  13"
"1","    1"
"1","   12"
"1","
  BV          "
"1","  0"
"1","   3"
"1","    6"
"1","    8"
"1","
"
"0","cat(""\n"")"
"1","
"
"0","##May be grouped stacked bar plot here (visit, cst, bv), just may be##"
"0","dt.ps2.v1v2.net <- rbind(dt.ps2.v1.net, dt.ps2.v2.net)"
"0","## End bar plot"
"0","colnames(dt.ps2.v1.net)[5] <- ""PrevCST"""
"0","colnames(dt.ps2.v2.net)[5] <- ""CurrCST"""
"0","#dt.ps2.v1.net <- dt.ps2.v1.net[, c(""SampleID"", ""VisitCode"", ""PrevCST"")]"
"0","dt.ps2.v1v2.netM <-left_join(dt.ps2.v2.net, dt.ps2.v1.net, by = ""ParticipantID"")"
"0","#View(dt.ps2.v1v2.netM)"
"0","#table(dt.ps2.v1v2.netM$PrevCST)"
"0","#table(dt.ps2.v1v2.netM$CurrCST)"
"0","cat(""Marked increase L.Crispatus after treatment and reduction in diversity"")"
"1","Marked increase L.Crispatus after treatment and reduction in diversity"
"0","table(dt.ps2.v1v2.netM$PrevCST, dt.ps2.v1v2.netM$CurrCST)"
"1","      
"
"1","      "
"1","  I"
"1"," III"
"1"," IV-A"
"1"," IV-B"
"1","
  I   "
"1","  0"
"1","   1"
"1","    0"
"1","    0"
"1","
  III "
"1","  3"
"1","   6"
"1","    1"
"1","    5"
"1","
  IV-A"
"1","  0"
"1","   6"
"1","    4"
"1","    7"
"1","
  IV-B"
"1","  0"
"1","  13"
"1","    2"
"1","    8"
"1","
"
"0","ttab <- table(dt.ps2.v1v2.netM$PrevCST, dt.ps2.v1v2.netM$CurrCST)"
"0","ttab <- table(dt.ps2.v1v2.netM$PrevCST, dt.ps2.v1v2.netM$CurrCST)"
"0","cat(""Table showing transitions accross visits"")"
"1","Table showing transitions accross visits"
"0","cro(dt.ps2.v1v2.netM$PrevCST, dt.ps2.v1v2.netM$CurrCST) # prevstate=row, curstate=col"
"1","                             "
"1","               "
"1","                           "
"1","      "
"1","       "
"1","       "
"1","
"
"1"," |                          |"
"1","              |"
"1"," dt.ps2.v1v2.netM$CurrCST |"
"1","     |"
"1","      |"
"1","      |"
"1","
"
"1"," |                          |"
"1","              |"
"1","                        I |"
"1"," III |"
"1"," IV-A |"
"1"," IV-B |"
"1","
"
"1"," | ------------------------ |"
"1"," ------------ |"
"1"," ------------------------ |"
"1"," --- |"
"1"," ---- |"
"1"," ---- |"
"1","
"
"1"," | dt.ps2.v1v2.netM$PrevCST |"
"1","            I |"
"1","                          |"
"1","   1 |"
"1","      |"
"1","      |"
"1","
"
"1"," |                          |"
"1","          III |"
"1","                        3 |"
"1","   6 |"
"1","    1 |"
"1","    5 |"
"1","
"
"1"," |                          |"
"1","         IV-A |"
"1","                          |"
"1","   6 |"
"1","    4 |"
"1","    7 |"
"1","
"
"1"," |                          |"
"1","         IV-B |"
"1","                          |"
"1","  13 |"
"1","    2 |"
"1","    8 |"
"1","
"
"1"," |                          |"
"1"," #Total cases |"
"1","                        3 |"
"1","  26 |"
"1","    7 |"
"1","   20 |"
"1","
"
"0","transMat_ <- matrix(ttab, nrow = 4)"
"0","transMat <- rbind(c(0,0,0,0,0,0), c(0,0,0,0,0,0), transMat_)"
"2","number of columns of result is not a multiple of vector length (arg 1)"
"0","transMat <- transMat/rowSums(transMat)"
"0","transMat[is.nan(transMat)] <- 0"
"0","CSTrans <- transMat"
"0","CSTs <- c(""I-A"", ""I-B"", ""III-A"", ""III-B"", ""IV-A"", ""IV-B"")"
"0","rownames(CSTrans) <- CSTs"
"0","CSTrans"
"1","     "
"1"," [,1]"
"1","      [,2]"
"1","       [,3]"
"1","      [,4]"
"1","
I-A  "
"1","  0.0"
"1"," 0.0000000"
"1"," 0.00000000"
"1"," 0.0000000"
"1","
I-B  "
"1","  0.0"
"1"," 0.0000000"
"1"," 0.00000000"
"1"," 0.0000000"
"1","
III-A"
"1","  0.0"
"1"," 1.0000000"
"1"," 0.00000000"
"1"," 0.0000000"
"1","
III-B"
"1","  0.2"
"1"," 0.4000000"
"1"," 0.06666667"
"1"," 0.3333333"
"1","
IV-A "
"1","  0.0"
"1"," 0.3529412"
"1"," 0.23529412"
"1"," 0.4117647"
"1","
IV-B "
"1","  0.0"
"1"," 0.5652174"
"1"," 0.08695652"
"1"," 0.3478261"
"1","
"
"0","CST_Persist <- -1/log(diag(CSTrans))"
"0","CST_Persist"
"1","[1]"
"1"," 0.0000000"
"1"," 0.0000000"
"1"," 0.0000000"
"1"," 0.9102392"
"1","
"
"0","# # Make Markov chain object"
"0","# "
"0","# mcCSTTrans <- new(""markovchain"", states=CSTs,"
"0","#               transitionMatrix = transMat, name=""CSTTrans"")"
"0","# mcCSTTrans"
"0","# "
"0","# # Set up igraph of the markov chain"
"0","# netMC <- markovchain:::.getNet(mcCSTTrans, round = TRUE)"
"0","# "
"0","# "
"0","# ###Define plotting parameters and assign node colors"
"0","# wts <- E(netMC)$weight/100"
"0","# "
"0","# edgel <- get.edgelist(netMC)"
"0","# elcat <- paste(edgel[,1], edgel[,2])"
"0","# elrev <- paste(edgel[,2], edgel[,1])"
"0","# edge.curved <- sapply(elcat, function(x) x %in% elrev)"
"0","# "
"0","# bvscat <- table(dt.ps2.v1v2.net$sim_CST, dt.ps2.v1v2.net$bvscat)"
"0","# rownames(bvscat) <- markovchain::states(mcCSTTrans)"
"0","# colnames(bvscat) <- c(""BV"", ""Intermediate"", ""Negative"")"
"0","# bvscat"
"0","# bvscat <- bvscat/rowSums(bvscat) #convert to relative abundance. Di"
"0","# vert.CSTclrs <- CSTColors #assign colors to be used for the vertices"
"0","# "
"0","# "
"0","# default.par <- par(no.readonly = TRUE)"
"0","# # Define color scale"
"0","# # Plotting function for markov chain"
"0","# plotMC <- function(object, ...) {"
"0","#   netMC <- markovchain:::.getNet(object, round = TRUE)"
"0","#   plot.igraph(x = netMC, ...)"
"0","# }"
"0","# # Color bar for the markov chain visualization, gradient in strength of preterm association"
"0","# color.bar <- function(lut, min, max=-min, nticks=11, ticks=seq(min, max, len=nticks), title=NULL) {"
"0","#   scale = (length(lut)-1)/(max-min)"
"0","# "
"0","#   cur.par <- par(no.readonly=T)"
"0","#   par(mar=c(0,4,1,4)+0.1, oma=c(0,0,0,0)+0.1)"
"0","#   par(ps = 10, cex = 0.8)"
"0","#   par(tcl=-0.2, cex.axis=0.8, cex.lab = 0.8)"
"0","#   plot(c(min,max), c(0,10), type='n', bty='n', xaxt='n', xlab='', yaxt='n', ylab='', main=title)"
"0","#   axis(1, c(0, 0.5, 1))"
"0","#   for (i in 1:(length(lut)-1)) {"
"0","#     x = (i-1)/scale + min"
"0","#     rect(x,0,x+1/scale,10, col=lut[i], border=NA)"
"0","#   }"
"0","# }"
"0","# "
"0","# ps2.v1v2.cst.glom.species.ra <- subset_samples(ps2.v1v2v3.glom.species.ra, sample_data(ps2.v1v2v3.cst.glom.species.ra)$VisitCode %in% c(1000, 1020))"
"0","# sample_data(ps2.v1v2.cst.glom.species.ra) <- sample_data(ps2.v1v2.cst.glom.species.ra)[order(get_variable(ps2.v1v2.cst.glom.species.ra, ""ParticipantID"")),]"
"0","# dt.ps2.v1v2.net <- dt.ps2.v1v2.net[order(dt.ps2.v1v2.net$ParticipantID),]"
"0","# sample_data(ps2.v1v2.cst.glom.species.ra)$sim_CST <- dt.ps2.v1v2.net$sim_CST"
"0","# pal <- colorRampPalette(c(""grey50"", ""maroon"", ""magenta2""))(101)"
"0","# vert.colors <- sapply(states(mcCSTTrans), function(x) pal[1+round(100*bvscat[x,""BV""])])"
"0","# vert.size <- 4 + 2*sapply(states(mcCSTTrans), function(x) nrow(unique(sample_data(ps2.v1v2.cst.glom.species.ra)[sample_data(ps2.v1v2.cst.glom.species.ra)$sim_CST==x,""ParticipantID""])))"
"0","# vert.size <- vert.size * 0.85"
"0","# vert.font.clrs <- c(""white"", ""white"", ""white"", ""white"")"
"0","# # E(netMC) to see edge list, have to define loop angles individually by the # in edge list, not vertex"
"0","# edge.loop.angle = c(0, 0, 0, 0, 3.14, 3.14, 0, 0, 0, 0, 3.14, 0, 0, 0, 0, 0)-0.45"
"0","# "
"0","# layout <- matrix(c(0.6,0.95, 0.3,0.66, 0.55,0.3, 0.75,0.65, 0.75,0.65), nrow=5, ncol=2, byrow=T)"
"0","# "
"0","# # Colored by association with BV"
"0","# layout(matrix(c(1,1,2,2), 2, 2, byrow = TRUE), heights=c(1,10))"
"0","# color.bar(pal, min=0, max=1, nticks=6, title=""Fraction BV"")"
"0","# par(mar=c(0,1,1,1)+0.1)"
"0","# edge.arrow.size=0.8"
"0","# edge.arrow.width=1.6"
"0","# edge.width = (15*wts + 0.1)*0.8"
"0","# edge.labels <- as.character(E(netMC)$weight/100)"
"0","# #edge.labels[edge.labels > 0.05] <- NA  # labels only for self-loops"
"0","# "
"0","# #Draw network diagram"
"0","# plotMC(mcCSTTrans, edge.arrow.size=edge.arrow.size, edge.arrow.width = edge.arrow.width,"
"0","#               edge.label = edge.labels, edge.label.font=0.2, edge.label.cex=1.3, edge.label.color=""black"","
"0","#        # FIX EDGE LABELS FOR PUBLICATION IN POST-PROCESSING"
"0","#        edge.width=edge.width, edge.curved=edge.curved,"
"0","#        vertex.color=vert.colors, vertex.size=(vert.size),"
"0","#        vertex.label.font = 2, vertex.label.cex = 1,"
"0","#        vertex.label.color = vert.font.clrs, vertex.frame.color = NA,"
"0","#        layout=layout, edge.loop.angle = edge.loop.angle)"
"0","# par(default.par)"
