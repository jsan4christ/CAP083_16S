"0","library(corrplot)"
"0","profInfC <- c(""TNF.b""  , ""IL.12p40"" , ""IL.12p70"" , ""IL.1a"" , ""IL.6"" , ""TNF.a"" , ""IL.1b"", ""IL.18"" , ""MIF"" , ""TRAIL"")"
"0","#View(data.frame(sample_data(ps2.v1v2v3.cst.glom.Species.ra)))"
"0","ps2.v1.cyto <- prune_samples(sample_data(ps2.v1v2v3.glom.species.ra)$VisitCode == 1000, ps2.v1v2v3.glom.species.ra)"
"0","ps2.v1.cyto <- prune_taxa(taxa_sums(ps2.v1.cyto) > 0, ps2.v1.cyto)"
"0","ps2.v2.cyto <- prune_samples(sample_data(ps2.v1v2v3.glom.species.ra)$VisitCode == 1020, ps2.v1v2v3.glom.species.ra)"
"0","ps2.v2.cyto <- prune_taxa(taxa_sums(ps2.v2.cyto) > 0, ps2.v2.cyto)"
"0","visit1cyto <- subset(data.frame(sample_data(ps2.v1v2v3.glom.species.ra)), VisitCode == 1000, select = c(""TNF.b""  , ""IL.12p40"" , ""IL.12p70"" , ""IL.1a"" , ""IL.6"" , ""TNF.a"" , ""IL.1b"", ""IL.18"" , ""MIF"" , ""TRAIL""))"
"0","visit2cyto <- subset(data.frame(sample_data(ps2.v1v2v3.glom.species.ra)), VisitCode == 1020, select = c(""TNF.b""  , ""IL.12p40"" , ""IL.12p70"" , ""IL.1a"" , ""IL.6"" , ""TNF.a"" , ""IL.1b"", ""IL.18"" , ""MIF"" , ""TRAIL""))"
"0","##Get patients in both common in both as some have been lost in prunning such that the two objects are not equal"
"0","#visit1cytoIds <- sapply(str_split(rownames(visit1cyto), ""_"", n = 2, simplify = FALSE), `[`, 1)"
"0","#visit2cytoIds <- sapply(str_split(rownames(visit2cyto), ""-"", n = 2, simplify = FALSE), `[`, 1)"
"0","visit1cyto$PID <- as.numeric(substr(rownames(visit1cyto), 1, nchar(rownames(visit1cyto))-1))"
"0","visit2cyto$PID <- as.numeric(substr(rownames(visit2cyto), 1, nchar(rownames(visit2cyto))-1))"
"0","idsInBoth <- intersect(visit1cyto$PID, visit2cyto$PID)"
"0","#visit1cyto <- apply(visit1cyto[idsInBoth, ], 2, as.numeric)"
"0","#visit2cyto <- apply(visit2cyto[idsInBoth, ], 2, as.numeric)"
"0","visit1cyto <- visit1cyto[visit1cyto$PID %in% idsInBoth, ]"
"0","visit2cyto <- visit2cyto[visit2cyto$PID %in% idsInBoth, ]"
"0","## order by rownames of v2c"
"0","visit1cyto <- visit1cyto[with(visit2cyto, order(rownames(visit1cyto))), ]"
"0","#visit12FC <- (visit2cyto - visit1cyto)  #/visit1cyto - since the values are small, no need for fold change. Change is sufficient."
"0","## if done right, last column pid must be 0 all through, and should be dropped."
"0","visit12FC <- (visit2cyto - visit1cyto[with(visit2cyto, order(rownames(visit1cyto))), ])"
"0","visit12FC$PID <- NULL ##drop PID column"
"0","##V1 samples"
"0","V1_otu_tab <- data.frame(otu_table(ps2.v1.cyto))"
"0","V1_otu_tab1 <- as.data.frame(t(V1_otu_tab))"
"0","V1_otu_tab1$OTU <- rownames(V1_otu_tab1)"
"0","V1_tax_tab <- data.frame(tax_table(ps2.v1.cyto))"
"0","V1_tax_tab$OTU <- rownames(V1_tax_tab)"
"0","otuWSpeciesV1 <- merge(V1_otu_tab1, V1_tax_tab[, c(""OTU"", ""Species"")], by = ""OTU"")"
"0","otuWSpeciesV1 <- otuWSpeciesV1[, -1]"
"0","otuWSpeciesV1 <- otuWSpeciesV1[!duplicated(otuWSpeciesV1$Species),]"
"0","rownames(otuWSpeciesV1) <- otuWSpeciesV1$Species"
"0","t.otuWSpeciesV1 <- data.frame(t(otuWSpeciesV1[, -ncol(otuWSpeciesV1)]))"
"0","##V2 samples"
"0","V2_otu_tab <- data.frame(otu_table(ps2.v2.cyto))"
"0","V2_otu_tab1 <- as.data.frame(t(V2_otu_tab))"
"0","V2_otu_tab1$OTU <- rownames(V2_otu_tab1)"
"0","V2_tax_tab <- data.frame(tax_table(ps2.v2.cyto))"
"0","V2_tax_tab$OTU <- rownames(V2_tax_tab)"
"0","otuWSpeciesV2 <- merge(V2_otu_tab1, V1_tax_tab[, c(""OTU"", ""Species"")], by = ""OTU"")"
"0","otuWSpeciesV2 <- otuWSpeciesV2[, -1]"
"0","otuWSpeciesV2 <- otuWSpeciesV2[!duplicated(otuWSpeciesV2$Species),]"
"0","rownames(otuWSpeciesV2) <- otuWSpeciesV2$Species"
"0","t.otuWSpeciesV2 <- data.frame(t(otuWSpeciesV2[, -ncol(otuWSpeciesV2)]))"
"0","## resolve ids"
"0","t.otuWSpeciesV1$PID <- as.numeric(substr(rownames(t.otuWSpeciesV1), 1, nchar(rownames(t.otuWSpeciesV1))-1))"
"0","t.otuWSpeciesV2$PID <- as.numeric(substr(rownames(t.otuWSpeciesV2), 1, nchar(rownames(t.otuWSpeciesV2))-1))"
"0","## Taxa in both"
"0","taxaInBoth <- intersect(colnames(t.otuWSpeciesV1), colnames(t.otuWSpeciesV2))"
"0","t.otuWSpeciesV1 <- t.otuWSpeciesV1[t.otuWSpeciesV1$PID %in% idsInBoth, taxaInBoth]"
"0","t.otuWSpeciesV2 <- t.otuWSpeciesV2[t.otuWSpeciesV2$PID %in% idsInBoth, taxaInBoth]"
"0","##Fold Change"
"0","otuWSpeciesFC <- (t.otuWSpeciesV2 - t.otuWSpeciesV1[with(t.otuWSpeciesV2, order(rownames(t.otuWSpeciesV1))), ])"
"0","otuWSpeciesFC$PID <- NULL ##drop PID column"
"0","##Plot  proinflamatory cytokines with bacteria"
"0","# Reformat species column names so they are easier to follow"
"0","#SpeciesColNames <- colnames(otuWSpeciesFC)"
"0","#SpeciesColNamesSplit <- t(data.frame(stri_split_fixed(str = SpeciesColNames, pattern = ""."", n = 2)))"
"0","#SpeciesColNamesFmt <- paste0(substr(SpeciesColNamesSplit[, 1], 1,1),"". "", SpeciesColNamesSplit[, 2])"
"0","#colnames(otuWSpeciesFC) <-  SpeciesColNamesFmt"
"0","#otuWSpeciesFC <- otuWSpeciesFC[, colSums(otuWSpeciesFC) > 0]"
"0","cyto.spec <- cbind(otuWSpeciesFC, visit12FC)"
"0","cyto.spec.pca <- PCA(scale(as.matrix(cyto.spec), center = TRUE, scale = TRUE), scale.unit = FALSE, graph = FALSE)"
"0","corrplot::corrplot(cor(otuWSpeciesFC , visit12FC), type=""full"","
"0","         p.mat = cyto.spec.pca$P, sig.level = 0.001, insig = ""blank"")"
